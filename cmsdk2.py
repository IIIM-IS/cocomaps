# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_cmsdk2')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_cmsdk2')
    _cmsdk2 = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_cmsdk2', [dirname(__file__)])
        except ImportError:
            import _cmsdk2
            return _cmsdk2
        if fp is not None:
            try:
                _mod = imp.load_module('_cmsdk2', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _cmsdk2 = swig_import_helper()
    del swig_import_helper
else:
    import _cmsdk2
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _cmsdk2.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _cmsdk2.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _cmsdk2.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _cmsdk2.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _cmsdk2.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _cmsdk2.SwigPyIterator_equal(self, x)

    def copy(self):
        return _cmsdk2.SwigPyIterator_copy(self)

    def next(self):
        return _cmsdk2.SwigPyIterator_next(self)

    def __next__(self):
        return _cmsdk2.SwigPyIterator___next__(self)

    def previous(self):
        return _cmsdk2.SwigPyIterator_previous(self)

    def advance(self, n):
        return _cmsdk2.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _cmsdk2.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _cmsdk2.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _cmsdk2.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _cmsdk2.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _cmsdk2.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _cmsdk2.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _cmsdk2.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

CURRENTDATAMESSAGEVERSION = _cmsdk2.CURRENTDATAMESSAGEVERSION
class DataMessageEntryHeader(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataMessageEntryHeader, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataMessageEntryHeader, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _cmsdk2.DataMessageEntryHeader_size_set
    __swig_getmethods__["size"] = _cmsdk2.DataMessageEntryHeader_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.DataMessageEntryHeader_size_get, _cmsdk2.DataMessageEntryHeader_size_set)
    __swig_setmethods__["cid"] = _cmsdk2.DataMessageEntryHeader_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.DataMessageEntryHeader_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.DataMessageEntryHeader_cid_get, _cmsdk2.DataMessageEntryHeader_cid_set)

    def __init__(self):
        this = _cmsdk2.new_DataMessageEntryHeader()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_DataMessageEntryHeader
    __del__ = lambda self: None
DataMessageEntryHeader_swigregister = _cmsdk2.DataMessageEntryHeader_swigregister
DataMessageEntryHeader_swigregister(DataMessageEntryHeader)

class DataMessageHeader_Old(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataMessageHeader_Old, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataMessageHeader_Old, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _cmsdk2.DataMessageHeader_Old_size_set
    __swig_getmethods__["size"] = _cmsdk2.DataMessageHeader_Old_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.DataMessageHeader_Old_size_get, _cmsdk2.DataMessageHeader_Old_size_set)
    __swig_setmethods__["cid"] = _cmsdk2.DataMessageHeader_Old_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.DataMessageHeader_Old_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.DataMessageHeader_Old_cid_get, _cmsdk2.DataMessageHeader_Old_cid_set)
    __swig_setmethods__["memid"] = _cmsdk2.DataMessageHeader_Old_memid_set
    __swig_getmethods__["memid"] = _cmsdk2.DataMessageHeader_Old_memid_get
    if _newclass:
        memid = _swig_property(_cmsdk2.DataMessageHeader_Old_memid_get, _cmsdk2.DataMessageHeader_Old_memid_set)
    __swig_setmethods__["time"] = _cmsdk2.DataMessageHeader_Old_time_set
    __swig_getmethods__["time"] = _cmsdk2.DataMessageHeader_Old_time_get
    if _newclass:
        time = _swig_property(_cmsdk2.DataMessageHeader_Old_time_get, _cmsdk2.DataMessageHeader_Old_time_set)
    __swig_setmethods__["sendtime"] = _cmsdk2.DataMessageHeader_Old_sendtime_set
    __swig_getmethods__["sendtime"] = _cmsdk2.DataMessageHeader_Old_sendtime_get
    if _newclass:
        sendtime = _swig_property(_cmsdk2.DataMessageHeader_Old_sendtime_get, _cmsdk2.DataMessageHeader_Old_sendtime_set)
    __swig_setmethods__["recvtime"] = _cmsdk2.DataMessageHeader_Old_recvtime_set
    __swig_getmethods__["recvtime"] = _cmsdk2.DataMessageHeader_Old_recvtime_get
    if _newclass:
        recvtime = _swig_property(_cmsdk2.DataMessageHeader_Old_recvtime_get, _cmsdk2.DataMessageHeader_Old_recvtime_set)
    __swig_setmethods__["origin"] = _cmsdk2.DataMessageHeader_Old_origin_set
    __swig_getmethods__["origin"] = _cmsdk2.DataMessageHeader_Old_origin_get
    if _newclass:
        origin = _swig_property(_cmsdk2.DataMessageHeader_Old_origin_get, _cmsdk2.DataMessageHeader_Old_origin_set)
    __swig_setmethods__["destination"] = _cmsdk2.DataMessageHeader_Old_destination_set
    __swig_getmethods__["destination"] = _cmsdk2.DataMessageHeader_Old_destination_get
    if _newclass:
        destination = _swig_property(_cmsdk2.DataMessageHeader_Old_destination_get, _cmsdk2.DataMessageHeader_Old_destination_set)
    __swig_setmethods__["ttl"] = _cmsdk2.DataMessageHeader_Old_ttl_set
    __swig_getmethods__["ttl"] = _cmsdk2.DataMessageHeader_Old_ttl_get
    if _newclass:
        ttl = _swig_property(_cmsdk2.DataMessageHeader_Old_ttl_get, _cmsdk2.DataMessageHeader_Old_ttl_set)
    __swig_setmethods__["priority"] = _cmsdk2.DataMessageHeader_Old_priority_set
    __swig_getmethods__["priority"] = _cmsdk2.DataMessageHeader_Old_priority_get
    if _newclass:
        priority = _swig_property(_cmsdk2.DataMessageHeader_Old_priority_get, _cmsdk2.DataMessageHeader_Old_priority_set)
    __swig_setmethods__["policy"] = _cmsdk2.DataMessageHeader_Old_policy_set
    __swig_getmethods__["policy"] = _cmsdk2.DataMessageHeader_Old_policy_get
    if _newclass:
        policy = _swig_property(_cmsdk2.DataMessageHeader_Old_policy_get, _cmsdk2.DataMessageHeader_Old_policy_set)
    __swig_setmethods__["_from"] = _cmsdk2.DataMessageHeader_Old__from_set
    __swig_getmethods__["_from"] = _cmsdk2.DataMessageHeader_Old__from_get
    if _newclass:
        _from = _swig_property(_cmsdk2.DataMessageHeader_Old__from_get, _cmsdk2.DataMessageHeader_Old__from_set)
    __swig_setmethods__["to"] = _cmsdk2.DataMessageHeader_Old_to_set
    __swig_getmethods__["to"] = _cmsdk2.DataMessageHeader_Old_to_get
    if _newclass:
        to = _swig_property(_cmsdk2.DataMessageHeader_Old_to_get, _cmsdk2.DataMessageHeader_Old_to_set)
    __swig_setmethods__["type"] = _cmsdk2.DataMessageHeader_Old_type_set
    __swig_getmethods__["type"] = _cmsdk2.DataMessageHeader_Old_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.DataMessageHeader_Old_type_get, _cmsdk2.DataMessageHeader_Old_type_set)
    __swig_setmethods__["tag"] = _cmsdk2.DataMessageHeader_Old_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.DataMessageHeader_Old_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.DataMessageHeader_Old_tag_get, _cmsdk2.DataMessageHeader_Old_tag_set)
    __swig_setmethods__["status"] = _cmsdk2.DataMessageHeader_Old_status_set
    __swig_getmethods__["status"] = _cmsdk2.DataMessageHeader_Old_status_get
    if _newclass:
        status = _swig_property(_cmsdk2.DataMessageHeader_Old_status_get, _cmsdk2.DataMessageHeader_Old_status_set)
    __swig_setmethods__["reference"] = _cmsdk2.DataMessageHeader_Old_reference_set
    __swig_getmethods__["reference"] = _cmsdk2.DataMessageHeader_Old_reference_get
    if _newclass:
        reference = _swig_property(_cmsdk2.DataMessageHeader_Old_reference_get, _cmsdk2.DataMessageHeader_Old_reference_set)
    __swig_setmethods__["serial"] = _cmsdk2.DataMessageHeader_Old_serial_set
    __swig_getmethods__["serial"] = _cmsdk2.DataMessageHeader_Old_serial_get
    if _newclass:
        serial = _swig_property(_cmsdk2.DataMessageHeader_Old_serial_get, _cmsdk2.DataMessageHeader_Old_serial_set)
    __swig_setmethods__["contextchange"] = _cmsdk2.DataMessageHeader_Old_contextchange_set
    __swig_getmethods__["contextchange"] = _cmsdk2.DataMessageHeader_Old_contextchange_get
    if _newclass:
        contextchange = _swig_property(_cmsdk2.DataMessageHeader_Old_contextchange_get, _cmsdk2.DataMessageHeader_Old_contextchange_set)
    __swig_setmethods__["userSize"] = _cmsdk2.DataMessageHeader_Old_userSize_set
    __swig_getmethods__["userSize"] = _cmsdk2.DataMessageHeader_Old_userSize_get
    if _newclass:
        userSize = _swig_property(_cmsdk2.DataMessageHeader_Old_userSize_get, _cmsdk2.DataMessageHeader_Old_userSize_set)
    __swig_setmethods__["userCount"] = _cmsdk2.DataMessageHeader_Old_userCount_set
    __swig_getmethods__["userCount"] = _cmsdk2.DataMessageHeader_Old_userCount_get
    if _newclass:
        userCount = _swig_property(_cmsdk2.DataMessageHeader_Old_userCount_get, _cmsdk2.DataMessageHeader_Old_userCount_set)

    def __init__(self):
        this = _cmsdk2.new_DataMessageHeader_Old()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_DataMessageHeader_Old
    __del__ = lambda self: None
DataMessageHeader_Old_swigregister = _cmsdk2.DataMessageHeader_Old_swigregister
DataMessageHeader_Old_swigregister(DataMessageHeader_Old)

class DataMessageHeader(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataMessageHeader, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataMessageHeader, name)
    __repr__ = _swig_repr
    __swig_setmethods__["size"] = _cmsdk2.DataMessageHeader_size_set
    __swig_getmethods__["size"] = _cmsdk2.DataMessageHeader_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.DataMessageHeader_size_get, _cmsdk2.DataMessageHeader_size_set)
    __swig_setmethods__["cid"] = _cmsdk2.DataMessageHeader_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.DataMessageHeader_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.DataMessageHeader_cid_get, _cmsdk2.DataMessageHeader_cid_set)
    __swig_setmethods__["cver"] = _cmsdk2.DataMessageHeader_cver_set
    __swig_getmethods__["cver"] = _cmsdk2.DataMessageHeader_cver_get
    if _newclass:
        cver = _swig_property(_cmsdk2.DataMessageHeader_cver_get, _cmsdk2.DataMessageHeader_cver_set)
    __swig_setmethods__["cenc"] = _cmsdk2.DataMessageHeader_cenc_set
    __swig_getmethods__["cenc"] = _cmsdk2.DataMessageHeader_cenc_get
    if _newclass:
        cenc = _swig_property(_cmsdk2.DataMessageHeader_cenc_get, _cmsdk2.DataMessageHeader_cenc_set)
    __swig_setmethods__["memid"] = _cmsdk2.DataMessageHeader_memid_set
    __swig_getmethods__["memid"] = _cmsdk2.DataMessageHeader_memid_get
    if _newclass:
        memid = _swig_property(_cmsdk2.DataMessageHeader_memid_get, _cmsdk2.DataMessageHeader_memid_set)
    __swig_setmethods__["time"] = _cmsdk2.DataMessageHeader_time_set
    __swig_getmethods__["time"] = _cmsdk2.DataMessageHeader_time_get
    if _newclass:
        time = _swig_property(_cmsdk2.DataMessageHeader_time_get, _cmsdk2.DataMessageHeader_time_set)
    __swig_setmethods__["sendtime"] = _cmsdk2.DataMessageHeader_sendtime_set
    __swig_getmethods__["sendtime"] = _cmsdk2.DataMessageHeader_sendtime_get
    if _newclass:
        sendtime = _swig_property(_cmsdk2.DataMessageHeader_sendtime_get, _cmsdk2.DataMessageHeader_sendtime_set)
    __swig_setmethods__["recvtime"] = _cmsdk2.DataMessageHeader_recvtime_set
    __swig_getmethods__["recvtime"] = _cmsdk2.DataMessageHeader_recvtime_get
    if _newclass:
        recvtime = _swig_property(_cmsdk2.DataMessageHeader_recvtime_get, _cmsdk2.DataMessageHeader_recvtime_set)
    __swig_setmethods__["origin"] = _cmsdk2.DataMessageHeader_origin_set
    __swig_getmethods__["origin"] = _cmsdk2.DataMessageHeader_origin_get
    if _newclass:
        origin = _swig_property(_cmsdk2.DataMessageHeader_origin_get, _cmsdk2.DataMessageHeader_origin_set)
    __swig_setmethods__["destination"] = _cmsdk2.DataMessageHeader_destination_set
    __swig_getmethods__["destination"] = _cmsdk2.DataMessageHeader_destination_get
    if _newclass:
        destination = _swig_property(_cmsdk2.DataMessageHeader_destination_get, _cmsdk2.DataMessageHeader_destination_set)
    __swig_setmethods__["ttl"] = _cmsdk2.DataMessageHeader_ttl_set
    __swig_getmethods__["ttl"] = _cmsdk2.DataMessageHeader_ttl_get
    if _newclass:
        ttl = _swig_property(_cmsdk2.DataMessageHeader_ttl_get, _cmsdk2.DataMessageHeader_ttl_set)
    __swig_setmethods__["priority"] = _cmsdk2.DataMessageHeader_priority_set
    __swig_getmethods__["priority"] = _cmsdk2.DataMessageHeader_priority_get
    if _newclass:
        priority = _swig_property(_cmsdk2.DataMessageHeader_priority_get, _cmsdk2.DataMessageHeader_priority_set)
    __swig_setmethods__["policy"] = _cmsdk2.DataMessageHeader_policy_set
    __swig_getmethods__["policy"] = _cmsdk2.DataMessageHeader_policy_get
    if _newclass:
        policy = _swig_property(_cmsdk2.DataMessageHeader_policy_get, _cmsdk2.DataMessageHeader_policy_set)
    __swig_setmethods__["_from"] = _cmsdk2.DataMessageHeader__from_set
    __swig_getmethods__["_from"] = _cmsdk2.DataMessageHeader__from_get
    if _newclass:
        _from = _swig_property(_cmsdk2.DataMessageHeader__from_get, _cmsdk2.DataMessageHeader__from_set)
    __swig_setmethods__["to"] = _cmsdk2.DataMessageHeader_to_set
    __swig_getmethods__["to"] = _cmsdk2.DataMessageHeader_to_get
    if _newclass:
        to = _swig_property(_cmsdk2.DataMessageHeader_to_get, _cmsdk2.DataMessageHeader_to_set)
    __swig_setmethods__["type"] = _cmsdk2.DataMessageHeader_type_set
    __swig_getmethods__["type"] = _cmsdk2.DataMessageHeader_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.DataMessageHeader_type_get, _cmsdk2.DataMessageHeader_type_set)
    __swig_setmethods__["tag"] = _cmsdk2.DataMessageHeader_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.DataMessageHeader_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.DataMessageHeader_tag_get, _cmsdk2.DataMessageHeader_tag_set)
    __swig_setmethods__["status"] = _cmsdk2.DataMessageHeader_status_set
    __swig_getmethods__["status"] = _cmsdk2.DataMessageHeader_status_get
    if _newclass:
        status = _swig_property(_cmsdk2.DataMessageHeader_status_get, _cmsdk2.DataMessageHeader_status_set)
    __swig_setmethods__["reference"] = _cmsdk2.DataMessageHeader_reference_set
    __swig_getmethods__["reference"] = _cmsdk2.DataMessageHeader_reference_get
    if _newclass:
        reference = _swig_property(_cmsdk2.DataMessageHeader_reference_get, _cmsdk2.DataMessageHeader_reference_set)
    __swig_setmethods__["serial"] = _cmsdk2.DataMessageHeader_serial_set
    __swig_getmethods__["serial"] = _cmsdk2.DataMessageHeader_serial_get
    if _newclass:
        serial = _swig_property(_cmsdk2.DataMessageHeader_serial_get, _cmsdk2.DataMessageHeader_serial_set)
    __swig_setmethods__["contextchange"] = _cmsdk2.DataMessageHeader_contextchange_set
    __swig_getmethods__["contextchange"] = _cmsdk2.DataMessageHeader_contextchange_get
    if _newclass:
        contextchange = _swig_property(_cmsdk2.DataMessageHeader_contextchange_get, _cmsdk2.DataMessageHeader_contextchange_set)
    __swig_setmethods__["userSize"] = _cmsdk2.DataMessageHeader_userSize_set
    __swig_getmethods__["userSize"] = _cmsdk2.DataMessageHeader_userSize_get
    if _newclass:
        userSize = _swig_property(_cmsdk2.DataMessageHeader_userSize_get, _cmsdk2.DataMessageHeader_userSize_set)
    __swig_setmethods__["userCount"] = _cmsdk2.DataMessageHeader_userCount_set
    __swig_getmethods__["userCount"] = _cmsdk2.DataMessageHeader_userCount_get
    if _newclass:
        userCount = _swig_property(_cmsdk2.DataMessageHeader_userCount_get, _cmsdk2.DataMessageHeader_userCount_set)
    __swig_setmethods__["cyclecputime"] = _cmsdk2.DataMessageHeader_cyclecputime_set
    __swig_getmethods__["cyclecputime"] = _cmsdk2.DataMessageHeader_cyclecputime_get
    if _newclass:
        cyclecputime = _swig_property(_cmsdk2.DataMessageHeader_cyclecputime_get, _cmsdk2.DataMessageHeader_cyclecputime_set)
    __swig_setmethods__["cyclewalltime"] = _cmsdk2.DataMessageHeader_cyclewalltime_set
    __swig_getmethods__["cyclewalltime"] = _cmsdk2.DataMessageHeader_cyclewalltime_get
    if _newclass:
        cyclewalltime = _swig_property(_cmsdk2.DataMessageHeader_cyclewalltime_get, _cmsdk2.DataMessageHeader_cyclewalltime_set)
    __swig_setmethods__["chaincputime"] = _cmsdk2.DataMessageHeader_chaincputime_set
    __swig_getmethods__["chaincputime"] = _cmsdk2.DataMessageHeader_chaincputime_get
    if _newclass:
        chaincputime = _swig_property(_cmsdk2.DataMessageHeader_chaincputime_get, _cmsdk2.DataMessageHeader_chaincputime_set)
    __swig_setmethods__["chainwalltime"] = _cmsdk2.DataMessageHeader_chainwalltime_set
    __swig_getmethods__["chainwalltime"] = _cmsdk2.DataMessageHeader_chainwalltime_get
    if _newclass:
        chainwalltime = _swig_property(_cmsdk2.DataMessageHeader_chainwalltime_get, _cmsdk2.DataMessageHeader_chainwalltime_set)
    __swig_setmethods__["chaincount"] = _cmsdk2.DataMessageHeader_chaincount_set
    __swig_getmethods__["chaincount"] = _cmsdk2.DataMessageHeader_chaincount_get
    if _newclass:
        chaincount = _swig_property(_cmsdk2.DataMessageHeader_chaincount_get, _cmsdk2.DataMessageHeader_chaincount_set)
    __swig_setmethods__["systemid"] = _cmsdk2.DataMessageHeader_systemid_set
    __swig_getmethods__["systemid"] = _cmsdk2.DataMessageHeader_systemid_get
    if _newclass:
        systemid = _swig_property(_cmsdk2.DataMessageHeader_systemid_get, _cmsdk2.DataMessageHeader_systemid_set)

    def toJSON(self, subtypes=None, subcontexts=None, compNames=None):
        return _cmsdk2.DataMessageHeader_toJSON(self, subtypes, subcontexts, compNames)

    def toXML(self, subtypes=None, subcontexts=None, compNames=None):
        return _cmsdk2.DataMessageHeader_toXML(self, subtypes, subcontexts, compNames)

    def __init__(self):
        this = _cmsdk2.new_DataMessageHeader()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_DataMessageHeader
    __del__ = lambda self: None
DataMessageHeader_swigregister = _cmsdk2.DataMessageHeader_swigregister
DataMessageHeader_swigregister(DataMessageHeader)

class DataMessage(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataMessage, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataMessage, name)
    __repr__ = _swig_repr
    if _newclass:
        FindClosestMessage = staticmethod(_cmsdk2.DataMessage_FindClosestMessage)
    else:
        FindClosestMessage = _cmsdk2.DataMessage_FindClosestMessage
    if _newclass:
        ConvertDataFromOlderMessageFormat = staticmethod(_cmsdk2.DataMessage_ConvertDataFromOlderMessageFormat)
    else:
        ConvertDataFromOlderMessageFormat = _cmsdk2.DataMessage_ConvertDataFromOlderMessageFormat

    def __init__(self, *args):
        this = _cmsdk2.new_DataMessage(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_DataMessage
    __del__ = lambda self: None

    def copy(self):
        return _cmsdk2.DataMessage_copy(self)

    def swapMessageData(self, data):
        return _cmsdk2.DataMessage_swapMessageData(self, data)

    def fillInDraftUserDataFrom(self, data, maxDraftSize):
        return _cmsdk2.DataMessage_fillInDraftUserDataFrom(self, data, maxDraftSize)

    def isValid(self):
        return _cmsdk2.DataMessage_isValid(self)

    def getAsBool(self, key):
        return _cmsdk2.DataMessage_getAsBool(self, key)

    def getUserSize(self):
        return _cmsdk2.DataMessage_getUserSize(self)

    def getUserCount(self):
        return _cmsdk2.DataMessage_getUserCount(self)
    NONE = _cmsdk2.DataMessage_NONE
    SINGLE = _cmsdk2.DataMessage_SINGLE
    ARRAY = _cmsdk2.DataMessage_ARRAY
    MAP = _cmsdk2.DataMessage_MAP

    def getKeyType(self, key):
        return _cmsdk2.DataMessage_getKeyType(self, key)

    def isArrayContent(self, key):
        return _cmsdk2.DataMessage_isArrayContent(self, key)

    def isMapContent(self, key):
        return _cmsdk2.DataMessage_isMapContent(self, key)

    def isSingleValue(self, key):
        return _cmsdk2.DataMessage_isSingleValue(self, key)

    def hasKey(self, key):
        return _cmsdk2.DataMessage_hasKey(self, key)

    def hasString(self, key):
        return _cmsdk2.DataMessage_hasString(self, key)

    def hasInteger(self, key):
        return _cmsdk2.DataMessage_hasInteger(self, key)

    def hasFloat(self, key):
        return _cmsdk2.DataMessage_hasFloat(self, key)

    def hasTime(self, key):
        return _cmsdk2.DataMessage_hasTime(self, key)

    def hasData(self, key):
        return _cmsdk2.DataMessage_hasData(self, key)

    def hasMessage(self, key):
        return _cmsdk2.DataMessage_hasMessage(self, key)

    def getTimeArray(self, key):
        return _cmsdk2.DataMessage_getTimeArray(self, key)

    def getAsStringArray(self, key):
        return _cmsdk2.DataMessage_getAsStringArray(self, key)

    def getAsIntArray(self, key):
        return _cmsdk2.DataMessage_getAsIntArray(self, key)

    def getAsFloatArray(self, key):
        return _cmsdk2.DataMessage_getAsFloatArray(self, key)

    def getStringArray(self, key):
        return _cmsdk2.DataMessage_getStringArray(self, key)

    def getIntArray(self, key):
        return _cmsdk2.DataMessage_getIntArray(self, key)

    def getDoubleArray(self, key):
        return _cmsdk2.DataMessage_getDoubleArray(self, key)

    def getFloatArray(self, key):
        return _cmsdk2.DataMessage_getFloatArray(self, key)

    def getAttachedMessageArray(self, key):
        return _cmsdk2.DataMessage_getAttachedMessageArray(self, key)

    def setTimeArray(self, key, map):
        return _cmsdk2.DataMessage_setTimeArray(self, key, map)

    def setStringArray(self, key, map):
        return _cmsdk2.DataMessage_setStringArray(self, key, map)

    def setIntArray(self, key, map):
        return _cmsdk2.DataMessage_setIntArray(self, key, map)

    def setDoubleArray(self, key, map):
        return _cmsdk2.DataMessage_setDoubleArray(self, key, map)

    def setFloatArray(self, key, map):
        return _cmsdk2.DataMessage_setFloatArray(self, key, map)

    def setAttachedMessageArray(self, key, map):
        return _cmsdk2.DataMessage_setAttachedMessageArray(self, key, map)

    def getContentType(self, *args):
        return _cmsdk2.DataMessage_getContentType(self, *args)

    def getContentSize(self, *args):
        return _cmsdk2.DataMessage_getContentSize(self, *args)

    def getTime(self, *args):
        return _cmsdk2.DataMessage_getTime(self, *args)

    def getAsString(self, *args):
        return _cmsdk2.DataMessage_getAsString(self, *args)

    def getAsInt(self, *args):
        return _cmsdk2.DataMessage_getAsInt(self, *args)

    def getAsTime(self, *args):
        return _cmsdk2.DataMessage_getAsTime(self, *args)

    def getAsFloat(self, *args):
        return _cmsdk2.DataMessage_getAsFloat(self, *args)

    def getString(self, *args):
        return _cmsdk2.DataMessage_getString(self, *args)

    def getInt(self, *args):
        return _cmsdk2.DataMessage_getInt(self, *args)

    def getDouble(self, *args):
        return _cmsdk2.DataMessage_getDouble(self, *args)

    def getFloat(self, *args):
        return _cmsdk2.DataMessage_getFloat(self, *args)

    def getData(self, *args):
        return _cmsdk2.DataMessage_getData(self, *args)

    def getDataCopy(self, *args):
        return _cmsdk2.DataMessage_getDataCopy(self, *args)

    def getAttachedMessageCopy(self, *args):
        return _cmsdk2.DataMessage_getAttachedMessageCopy(self, *args)

    def setTime(self, *args):
        return _cmsdk2.DataMessage_setTime(self, *args)

    def setString(self, *args):
        return _cmsdk2.DataMessage_setString(self, *args)

    def setInt(self, *args):
        return _cmsdk2.DataMessage_setInt(self, *args)

    def setDouble(self, *args):
        return _cmsdk2.DataMessage_setDouble(self, *args)

    def setFloat(self, *args):
        return _cmsdk2.DataMessage_setFloat(self, *args)

    def setData(self, *args):
        return _cmsdk2.DataMessage_setData(self, *args)

    def setAttachedMessage(self, *args):
        return _cmsdk2.DataMessage_setAttachedMessage(self, *args)

    def getTimeMap(self, key):
        return _cmsdk2.DataMessage_getTimeMap(self, key)

    def getAsStringMap(self, key):
        return _cmsdk2.DataMessage_getAsStringMap(self, key)

    def getAsIntMap(self, key):
        return _cmsdk2.DataMessage_getAsIntMap(self, key)

    def getAsFloatMap(self, key):
        return _cmsdk2.DataMessage_getAsFloatMap(self, key)

    def getStringMap(self, key):
        return _cmsdk2.DataMessage_getStringMap(self, key)

    def getIntMap(self, key):
        return _cmsdk2.DataMessage_getIntMap(self, key)

    def getDoubleMap(self, key):
        return _cmsdk2.DataMessage_getDoubleMap(self, key)

    def getFloatMap(self, key):
        return _cmsdk2.DataMessage_getFloatMap(self, key)

    def getAttachedMessageMap(self, key):
        return _cmsdk2.DataMessage_getAttachedMessageMap(self, key)

    def setTimeMap(self, key, map):
        return _cmsdk2.DataMessage_setTimeMap(self, key, map)

    def setStringMap(self, key, map):
        return _cmsdk2.DataMessage_setStringMap(self, key, map)

    def setIntMap(self, key, map):
        return _cmsdk2.DataMessage_setIntMap(self, key, map)

    def setDoubleMap(self, key, map):
        return _cmsdk2.DataMessage_setDoubleMap(self, key, map)

    def setFloatMap(self, key, map):
        return _cmsdk2.DataMessage_setFloatMap(self, key, map)

    def setAttachedMessageMap(self, key, map):
        return _cmsdk2.DataMessage_setAttachedMessageMap(self, key, map)

    def toJSON(self, subtypes=None, subcontexts=None, compNames=None):
        return _cmsdk2.DataMessage_toJSON(self, subtypes, subcontexts, compNames)

    def toXML(self, subtypes=None, subcontexts=None, compNames=None):
        return _cmsdk2.DataMessage_toXML(self, subtypes, subcontexts, compNames)

    def toCSV(self, separator=None, preample=None, subtypes=None, subcontexts=None, compNames=None):
        return _cmsdk2.DataMessage_toCSV(self, separator, preample, subtypes, subcontexts, compNames)
    if _newclass:
        GetCSVHeader = staticmethod(_cmsdk2.DataMessage_GetCSVHeader)
    else:
        GetCSVHeader = _cmsdk2.DataMessage_GetCSVHeader

    def copyUserEntriesFromMessage(self, msg):
        return _cmsdk2.DataMessage_copyUserEntriesFromMessage(self, msg)

    def getUserEntriesAsString(self):
        return _cmsdk2.DataMessage_getUserEntriesAsString(self)

    def getUserEntriesAsJSON(self, asText):
        return _cmsdk2.DataMessage_getUserEntriesAsJSON(self, asText)

    def getRawData(self):
        return _cmsdk2.DataMessage_getRawData(self)

    def getOrigin(self):
        return _cmsdk2.DataMessage_getOrigin(self)

    def getDestination(self):
        return _cmsdk2.DataMessage_getDestination(self)

    def setOrigin(self, addr):
        return _cmsdk2.DataMessage_setOrigin(self, addr)

    def setDestination(self, addr):
        return _cmsdk2.DataMessage_setDestination(self, addr)

    def getSize(self):
        return _cmsdk2.DataMessage_getSize(self)

    def setMultiple(self, arg2, to, tag, ttl, policy, sendtime):
        return _cmsdk2.DataMessage_setMultiple(self, arg2, to, tag, ttl, policy, sendtime)

    def getTag(self):
        return _cmsdk2.DataMessage_getTag(self)

    def setTag(self, tag):
        return _cmsdk2.DataMessage_setTag(self, tag)

    def getReference(self):
        return _cmsdk2.DataMessage_getReference(self)

    def setReference(self, ref):
        return _cmsdk2.DataMessage_setReference(self, ref)

    def getSystemID(self):
        return _cmsdk2.DataMessage_getSystemID(self)

    def setSystemID(self, id):
        return _cmsdk2.DataMessage_setSystemID(self, id)

    def getMemID(self):
        return _cmsdk2.DataMessage_getMemID(self)

    def setMemID(self, id):
        return _cmsdk2.DataMessage_setMemID(self, id)

    def getFrom(self):
        return _cmsdk2.DataMessage_getFrom(self)

    def setFrom(self, arg2):
        return _cmsdk2.DataMessage_setFrom(self, arg2)

    def getTo(self):
        return _cmsdk2.DataMessage_getTo(self)

    def setTo(self, to):
        return _cmsdk2.DataMessage_setTo(self, to)

    def getType(self):
        return _cmsdk2.DataMessage_getType(self)

    def setType(self, type):
        return _cmsdk2.DataMessage_setType(self, type)

    def getContextChange(self):
        return _cmsdk2.DataMessage_getContextChange(self)

    def setContextChange(self, context):
        return _cmsdk2.DataMessage_setContextChange(self, context)

    def getTTL(self):
        return _cmsdk2.DataMessage_getTTL(self)

    def getEOL(self):
        return _cmsdk2.DataMessage_getEOL(self)

    def setTTL(self, ttl):
        return _cmsdk2.DataMessage_setTTL(self, ttl)

    def setEOL(self, eol):
        return _cmsdk2.DataMessage_setEOL(self, eol)

    def getPriority(self):
        return _cmsdk2.DataMessage_getPriority(self)

    def setPriority(self, priority):
        return _cmsdk2.DataMessage_setPriority(self, priority)

    def getPolicy(self):
        return _cmsdk2.DataMessage_getPolicy(self)

    def setPolicy(self, policy):
        return _cmsdk2.DataMessage_setPolicy(self, policy)

    def getSendTime(self):
        return _cmsdk2.DataMessage_getSendTime(self)

    def setSendTime(self, time):
        return _cmsdk2.DataMessage_setSendTime(self, time)

    def getRecvTime(self):
        return _cmsdk2.DataMessage_getRecvTime(self)

    def setRecvTime(self, time):
        return _cmsdk2.DataMessage_setRecvTime(self, time)

    def getCreatedTime(self):
        return _cmsdk2.DataMessage_getCreatedTime(self)

    def setCreatedTime(self, t):
        return _cmsdk2.DataMessage_setCreatedTime(self, t)

    def getStatus(self):
        return _cmsdk2.DataMessage_getStatus(self)

    def setStatus(self, status):
        return _cmsdk2.DataMessage_setStatus(self, status)

    def getSerial(self):
        return _cmsdk2.DataMessage_getSerial(self)

    def setSerial(self, serial):
        return _cmsdk2.DataMessage_setSerial(self, serial)

    def addTimeUsage(self, cycleCPUTime, cycleWallTime, chainCPUTime=0, chainWallTime=0, chainCount=0):
        return _cmsdk2.DataMessage_addTimeUsage(self, cycleCPUTime, cycleWallTime, chainCPUTime, chainWallTime, chainCount)

    def getCycleCPUTime(self):
        return _cmsdk2.DataMessage_getCycleCPUTime(self)

    def setCycleCPUTime(self, t):
        return _cmsdk2.DataMessage_setCycleCPUTime(self, t)

    def getCycleWallTime(self):
        return _cmsdk2.DataMessage_getCycleWallTime(self)

    def setCycleWallTime(self, t):
        return _cmsdk2.DataMessage_setCycleWallTime(self, t)

    def getChainCPUTime(self):
        return _cmsdk2.DataMessage_getChainCPUTime(self)

    def setChainCPUTime(self, t):
        return _cmsdk2.DataMessage_setChainCPUTime(self, t)

    def getChainWallTime(self):
        return _cmsdk2.DataMessage_getChainWallTime(self)

    def setChainWallTime(self, t):
        return _cmsdk2.DataMessage_setChainWallTime(self, t)

    def getChainCount(self):
        return _cmsdk2.DataMessage_getChainCount(self)

    def setChainCount(self, count):
        return _cmsdk2.DataMessage_setChainCount(self, count)

    def deleteEntry(self, key):
        return _cmsdk2.DataMessage_deleteEntry(self, key)
    __swig_setmethods__["data"] = _cmsdk2.DataMessage_data_set
    __swig_getmethods__["data"] = _cmsdk2.DataMessage_data_get
    if _newclass:
        data = _swig_property(_cmsdk2.DataMessage_data_get, _cmsdk2.DataMessage_data_set)
DataMessage_swigregister = _cmsdk2.DataMessage_swigregister
DataMessage_swigregister(DataMessage)

def DataMessage_FindClosestMessage(t, messages):
    return _cmsdk2.DataMessage_FindClosestMessage(t, messages)
DataMessage_FindClosestMessage = _cmsdk2.DataMessage_FindClosestMessage

def DataMessage_ConvertDataFromOlderMessageFormat(data, newData):
    return _cmsdk2.DataMessage_ConvertDataFromOlderMessageFormat(data, newData)
DataMessage_ConvertDataFromOlderMessageFormat = _cmsdk2.DataMessage_ConvertDataFromOlderMessageFormat

def DataMessage_GetCSVHeader(separator=None, preample=None):
    return _cmsdk2.DataMessage_GetCSVHeader(separator, preample)
DataMessage_GetCSVHeader = _cmsdk2.DataMessage_GetCSVHeader

COMP_WHITEBOARD = _cmsdk2.COMP_WHITEBOARD
COMP_CATALOG = _cmsdk2.COMP_CATALOG
COMP_STREAM = _cmsdk2.COMP_STREAM
COMP_FEED = _cmsdk2.COMP_FEED
COMP_SERVICE = _cmsdk2.COMP_SERVICE
COMP_MODULE = _cmsdk2.COMP_MODULE
COMP_INTERNAL = _cmsdk2.COMP_INTERNAL
COMP_EXTERNAL = _cmsdk2.COMP_EXTERNAL
COMP_MIGRATE_NO = _cmsdk2.COMP_MIGRATE_NO
COMP_MIGRATE_ALLOW = _cmsdk2.COMP_MIGRATE_ALLOW
TRIGGERFILTER_HASKEY = _cmsdk2.TRIGGERFILTER_HASKEY
TRIGGERFILTER_EQUALS = _cmsdk2.TRIGGERFILTER_EQUALS
TRIGGERFILTER_NOTEQUALS = _cmsdk2.TRIGGERFILTER_NOTEQUALS
TRIGGERFILTER_EQUALSNUMERIC = _cmsdk2.TRIGGERFILTER_EQUALSNUMERIC
TRIGGERFILTER_NOTEQUALSNUMERIC = _cmsdk2.TRIGGERFILTER_NOTEQUALSNUMERIC
TRIGGERFILTER_GREATERTHAN = _cmsdk2.TRIGGERFILTER_GREATERTHAN
TRIGGERFILTER_LESSTHAN = _cmsdk2.TRIGGERFILTER_LESSTHAN
TRIGGERFILTER_MAXAGE = _cmsdk2.TRIGGERFILTER_MAXAGE
INDEX_TIME = _cmsdk2.INDEX_TIME
INDEX_STRING = _cmsdk2.INDEX_STRING
INDEX_INTEGER = _cmsdk2.INDEX_INTEGER
INDEX_FLOAT = _cmsdk2.INDEX_FLOAT
class FilterSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FilterSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FilterSpec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["filter"] = _cmsdk2.FilterSpec_filter_set
    __swig_getmethods__["filter"] = _cmsdk2.FilterSpec_filter_get
    if _newclass:
        filter = _swig_property(_cmsdk2.FilterSpec_filter_get, _cmsdk2.FilterSpec_filter_set)
    __swig_setmethods__["time"] = _cmsdk2.FilterSpec_time_set
    __swig_getmethods__["time"] = _cmsdk2.FilterSpec_time_get
    if _newclass:
        time = _swig_property(_cmsdk2.FilterSpec_time_get, _cmsdk2.FilterSpec_time_set)
    __swig_setmethods__["key"] = _cmsdk2.FilterSpec_key_set
    __swig_getmethods__["key"] = _cmsdk2.FilterSpec_key_get
    if _newclass:
        key = _swig_property(_cmsdk2.FilterSpec_key_get, _cmsdk2.FilterSpec_key_set)
    __swig_setmethods__["value"] = _cmsdk2.FilterSpec_value_set
    __swig_getmethods__["value"] = _cmsdk2.FilterSpec_value_get
    if _newclass:
        value = _swig_property(_cmsdk2.FilterSpec_value_get, _cmsdk2.FilterSpec_value_set)

    def toXML(self):
        return _cmsdk2.FilterSpec_toXML(self)

    def fromXML(self, *args):
        return _cmsdk2.FilterSpec_fromXML(self, *args)

    def __init__(self):
        this = _cmsdk2.new_FilterSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_FilterSpec
    __del__ = lambda self: None
FilterSpec_swigregister = _cmsdk2.FilterSpec_swigregister
FilterSpec_swigregister(FilterSpec)

class QuerySpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, QuerySpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, QuerySpec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["source"] = _cmsdk2.QuerySpec_source_set
    __swig_getmethods__["source"] = _cmsdk2.QuerySpec_source_get
    if _newclass:
        source = _swig_property(_cmsdk2.QuerySpec_source_get, _cmsdk2.QuerySpec_source_set)
    __swig_setmethods__["origin"] = _cmsdk2.QuerySpec_origin_set
    __swig_getmethods__["origin"] = _cmsdk2.QuerySpec_origin_get
    if _newclass:
        origin = _swig_property(_cmsdk2.QuerySpec_origin_get, _cmsdk2.QuerySpec_origin_set)
    __swig_setmethods__["maxage"] = _cmsdk2.QuerySpec_maxage_set
    __swig_getmethods__["maxage"] = _cmsdk2.QuerySpec_maxage_get
    if _newclass:
        maxage = _swig_property(_cmsdk2.QuerySpec_maxage_get, _cmsdk2.QuerySpec_maxage_set)
    __swig_setmethods__["maxcount"] = _cmsdk2.QuerySpec_maxcount_set
    __swig_getmethods__["maxcount"] = _cmsdk2.QuerySpec_maxcount_get
    if _newclass:
        maxcount = _swig_property(_cmsdk2.QuerySpec_maxcount_get, _cmsdk2.QuerySpec_maxcount_set)
    __swig_setmethods__["context"] = _cmsdk2.QuerySpec_context_set
    __swig_getmethods__["context"] = _cmsdk2.QuerySpec_context_get
    if _newclass:
        context = _swig_property(_cmsdk2.QuerySpec_context_get, _cmsdk2.QuerySpec_context_set)
    __swig_setmethods__["binary"] = _cmsdk2.QuerySpec_binary_set
    __swig_getmethods__["binary"] = _cmsdk2.QuerySpec_binary_get
    if _newclass:
        binary = _swig_property(_cmsdk2.QuerySpec_binary_get, _cmsdk2.QuerySpec_binary_set)
    __swig_setmethods__["ipHost"] = _cmsdk2.QuerySpec_ipHost_set
    __swig_getmethods__["ipHost"] = _cmsdk2.QuerySpec_ipHost_get
    if _newclass:
        ipHost = _swig_property(_cmsdk2.QuerySpec_ipHost_get, _cmsdk2.QuerySpec_ipHost_set)
    __swig_setmethods__["ipPort"] = _cmsdk2.QuerySpec_ipPort_set
    __swig_getmethods__["ipPort"] = _cmsdk2.QuerySpec_ipPort_get
    if _newclass:
        ipPort = _swig_property(_cmsdk2.QuerySpec_ipPort_get, _cmsdk2.QuerySpec_ipPort_set)
    __swig_setmethods__["sourceName"] = _cmsdk2.QuerySpec_sourceName_set
    __swig_getmethods__["sourceName"] = _cmsdk2.QuerySpec_sourceName_get
    if _newclass:
        sourceName = _swig_property(_cmsdk2.QuerySpec_sourceName_get, _cmsdk2.QuerySpec_sourceName_set)
    __swig_setmethods__["hostName"] = _cmsdk2.QuerySpec_hostName_set
    __swig_getmethods__["hostName"] = _cmsdk2.QuerySpec_hostName_get
    if _newclass:
        hostName = _swig_property(_cmsdk2.QuerySpec_hostName_get, _cmsdk2.QuerySpec_hostName_set)
    __swig_setmethods__["name"] = _cmsdk2.QuerySpec_name_set
    __swig_getmethods__["name"] = _cmsdk2.QuerySpec_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.QuerySpec_name_get, _cmsdk2.QuerySpec_name_set)
    __swig_setmethods__["key"] = _cmsdk2.QuerySpec_key_set
    __swig_getmethods__["key"] = _cmsdk2.QuerySpec_key_get
    if _newclass:
        key = _swig_property(_cmsdk2.QuerySpec_key_get, _cmsdk2.QuerySpec_key_set)
    __swig_setmethods__["value"] = _cmsdk2.QuerySpec_value_set
    __swig_getmethods__["value"] = _cmsdk2.QuerySpec_value_get
    if _newclass:
        value = _swig_property(_cmsdk2.QuerySpec_value_get, _cmsdk2.QuerySpec_value_set)
    __swig_setmethods__["type"] = _cmsdk2.QuerySpec_type_set
    __swig_getmethods__["type"] = _cmsdk2.QuerySpec_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.QuerySpec_type_get, _cmsdk2.QuerySpec_type_set)
    __swig_setmethods__["subdir"] = _cmsdk2.QuerySpec_subdir_set
    __swig_getmethods__["subdir"] = _cmsdk2.QuerySpec_subdir_get
    if _newclass:
        subdir = _swig_property(_cmsdk2.QuerySpec_subdir_get, _cmsdk2.QuerySpec_subdir_set)
    __swig_setmethods__["ext"] = _cmsdk2.QuerySpec_ext_set
    __swig_getmethods__["ext"] = _cmsdk2.QuerySpec_ext_get
    if _newclass:
        ext = _swig_property(_cmsdk2.QuerySpec_ext_get, _cmsdk2.QuerySpec_ext_set)
    __swig_setmethods__["operation"] = _cmsdk2.QuerySpec_operation_set
    __swig_getmethods__["operation"] = _cmsdk2.QuerySpec_operation_get
    if _newclass:
        operation = _swig_property(_cmsdk2.QuerySpec_operation_get, _cmsdk2.QuerySpec_operation_set)

    def toXML(self):
        return _cmsdk2.QuerySpec_toXML(self)

    def fromXML(self, *args):
        return _cmsdk2.QuerySpec_fromXML(self, *args)

    def __init__(self):
        this = _cmsdk2.new_QuerySpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_QuerySpec
    __del__ = lambda self: None
QuerySpec_swigregister = _cmsdk2.QuerySpec_swigregister
QuerySpec_swigregister(QuerySpec)

class RetrieveSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RetrieveSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RetrieveSpec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["source"] = _cmsdk2.RetrieveSpec_source_set
    __swig_getmethods__["source"] = _cmsdk2.RetrieveSpec_source_get
    if _newclass:
        source = _swig_property(_cmsdk2.RetrieveSpec_source_get, _cmsdk2.RetrieveSpec_source_set)
    __swig_setmethods__["origin"] = _cmsdk2.RetrieveSpec_origin_set
    __swig_getmethods__["origin"] = _cmsdk2.RetrieveSpec_origin_get
    if _newclass:
        origin = _swig_property(_cmsdk2.RetrieveSpec_origin_get, _cmsdk2.RetrieveSpec_origin_set)
    __swig_setmethods__["maxage"] = _cmsdk2.RetrieveSpec_maxage_set
    __swig_getmethods__["maxage"] = _cmsdk2.RetrieveSpec_maxage_get
    if _newclass:
        maxage = _swig_property(_cmsdk2.RetrieveSpec_maxage_get, _cmsdk2.RetrieveSpec_maxage_set)
    __swig_setmethods__["maxcount"] = _cmsdk2.RetrieveSpec_maxcount_set
    __swig_getmethods__["maxcount"] = _cmsdk2.RetrieveSpec_maxcount_get
    if _newclass:
        maxcount = _swig_property(_cmsdk2.RetrieveSpec_maxcount_get, _cmsdk2.RetrieveSpec_maxcount_set)
    __swig_setmethods__["type"] = _cmsdk2.RetrieveSpec_type_set
    __swig_getmethods__["type"] = _cmsdk2.RetrieveSpec_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.RetrieveSpec_type_get, _cmsdk2.RetrieveSpec_type_set)
    __swig_setmethods__["context"] = _cmsdk2.RetrieveSpec_context_set
    __swig_getmethods__["context"] = _cmsdk2.RetrieveSpec_context_get
    if _newclass:
        context = _swig_property(_cmsdk2.RetrieveSpec_context_get, _cmsdk2.RetrieveSpec_context_set)
    __swig_setmethods__["tag"] = _cmsdk2.RetrieveSpec_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.RetrieveSpec_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.RetrieveSpec_tag_get, _cmsdk2.RetrieveSpec_tag_set)
    __swig_setmethods__["name"] = _cmsdk2.RetrieveSpec_name_set
    __swig_getmethods__["name"] = _cmsdk2.RetrieveSpec_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.RetrieveSpec_name_get, _cmsdk2.RetrieveSpec_name_set)
    __swig_setmethods__["key"] = _cmsdk2.RetrieveSpec_key_set
    __swig_getmethods__["key"] = _cmsdk2.RetrieveSpec_key_get
    if _newclass:
        key = _swig_property(_cmsdk2.RetrieveSpec_key_get, _cmsdk2.RetrieveSpec_key_set)
    __swig_setmethods__["keytype"] = _cmsdk2.RetrieveSpec_keytype_set
    __swig_getmethods__["keytype"] = _cmsdk2.RetrieveSpec_keytype_get
    if _newclass:
        keytype = _swig_property(_cmsdk2.RetrieveSpec_keytype_get, _cmsdk2.RetrieveSpec_keytype_set)
    __swig_setmethods__["_from"] = _cmsdk2.RetrieveSpec__from_set
    __swig_getmethods__["_from"] = _cmsdk2.RetrieveSpec__from_get
    if _newclass:
        _from = _swig_property(_cmsdk2.RetrieveSpec__from_get, _cmsdk2.RetrieveSpec__from_set)
    __swig_setmethods__["to"] = _cmsdk2.RetrieveSpec_to_set
    __swig_getmethods__["to"] = _cmsdk2.RetrieveSpec_to_get
    if _newclass:
        to = _swig_property(_cmsdk2.RetrieveSpec_to_get, _cmsdk2.RetrieveSpec_to_set)
    __swig_setmethods__["startTime"] = _cmsdk2.RetrieveSpec_startTime_set
    __swig_getmethods__["startTime"] = _cmsdk2.RetrieveSpec_startTime_get
    if _newclass:
        startTime = _swig_property(_cmsdk2.RetrieveSpec_startTime_get, _cmsdk2.RetrieveSpec_startTime_set)
    __swig_setmethods__["endTime"] = _cmsdk2.RetrieveSpec_endTime_set
    __swig_getmethods__["endTime"] = _cmsdk2.RetrieveSpec_endTime_get
    if _newclass:
        endTime = _swig_property(_cmsdk2.RetrieveSpec_endTime_get, _cmsdk2.RetrieveSpec_endTime_set)
    __swig_setmethods__["startInt"] = _cmsdk2.RetrieveSpec_startInt_set
    __swig_getmethods__["startInt"] = _cmsdk2.RetrieveSpec_startInt_get
    if _newclass:
        startInt = _swig_property(_cmsdk2.RetrieveSpec_startInt_get, _cmsdk2.RetrieveSpec_startInt_set)
    __swig_setmethods__["endInt"] = _cmsdk2.RetrieveSpec_endInt_set
    __swig_getmethods__["endInt"] = _cmsdk2.RetrieveSpec_endInt_get
    if _newclass:
        endInt = _swig_property(_cmsdk2.RetrieveSpec_endInt_get, _cmsdk2.RetrieveSpec_endInt_set)
    __swig_setmethods__["startFloat"] = _cmsdk2.RetrieveSpec_startFloat_set
    __swig_getmethods__["startFloat"] = _cmsdk2.RetrieveSpec_startFloat_get
    if _newclass:
        startFloat = _swig_property(_cmsdk2.RetrieveSpec_startFloat_get, _cmsdk2.RetrieveSpec_startFloat_set)
    __swig_setmethods__["endFloat"] = _cmsdk2.RetrieveSpec_endFloat_set
    __swig_getmethods__["endFloat"] = _cmsdk2.RetrieveSpec_endFloat_get
    if _newclass:
        endFloat = _swig_property(_cmsdk2.RetrieveSpec_endFloat_get, _cmsdk2.RetrieveSpec_endFloat_set)
    __swig_setmethods__["startString"] = _cmsdk2.RetrieveSpec_startString_set
    __swig_getmethods__["startString"] = _cmsdk2.RetrieveSpec_startString_get
    if _newclass:
        startString = _swig_property(_cmsdk2.RetrieveSpec_startString_get, _cmsdk2.RetrieveSpec_startString_set)
    __swig_setmethods__["endString"] = _cmsdk2.RetrieveSpec_endString_set
    __swig_getmethods__["endString"] = _cmsdk2.RetrieveSpec_endString_get
    if _newclass:
        endString = _swig_property(_cmsdk2.RetrieveSpec_endString_get, _cmsdk2.RetrieveSpec_endString_set)

    def toXML(self):
        return _cmsdk2.RetrieveSpec_toXML(self)

    def fromXML(self, *args):
        return _cmsdk2.RetrieveSpec_fromXML(self, *args)

    def __init__(self):
        this = _cmsdk2.new_RetrieveSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_RetrieveSpec
    __del__ = lambda self: None
RetrieveSpec_swigregister = _cmsdk2.RetrieveSpec_swigregister
RetrieveSpec_swigregister(RetrieveSpec)

MESSAGE_NON_GUARANTEED = _cmsdk2.MESSAGE_NON_GUARANTEED
class PostSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PostSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PostSpec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["to"] = _cmsdk2.PostSpec_to_set
    __swig_getmethods__["to"] = _cmsdk2.PostSpec_to_get
    if _newclass:
        to = _swig_property(_cmsdk2.PostSpec_to_get, _cmsdk2.PostSpec_to_set)
    __swig_setmethods__["type"] = _cmsdk2.PostSpec_type_set
    __swig_getmethods__["type"] = _cmsdk2.PostSpec_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.PostSpec_type_get, _cmsdk2.PostSpec_type_set)
    __swig_setmethods__["context"] = _cmsdk2.PostSpec_context_set
    __swig_getmethods__["context"] = _cmsdk2.PostSpec_context_get
    if _newclass:
        context = _swig_property(_cmsdk2.PostSpec_context_get, _cmsdk2.PostSpec_context_set)
    __swig_setmethods__["contextchange"] = _cmsdk2.PostSpec_contextchange_set
    __swig_getmethods__["contextchange"] = _cmsdk2.PostSpec_contextchange_get
    if _newclass:
        contextchange = _swig_property(_cmsdk2.PostSpec_contextchange_get, _cmsdk2.PostSpec_contextchange_set)
    __swig_setmethods__["tag"] = _cmsdk2.PostSpec_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.PostSpec_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.PostSpec_tag_get, _cmsdk2.PostSpec_tag_set)
    __swig_setmethods__["ttl"] = _cmsdk2.PostSpec_ttl_set
    __swig_getmethods__["ttl"] = _cmsdk2.PostSpec_ttl_get
    if _newclass:
        ttl = _swig_property(_cmsdk2.PostSpec_ttl_get, _cmsdk2.PostSpec_ttl_set)
    __swig_setmethods__["policy"] = _cmsdk2.PostSpec_policy_set
    __swig_getmethods__["policy"] = _cmsdk2.PostSpec_policy_get
    if _newclass:
        policy = _swig_property(_cmsdk2.PostSpec_policy_get, _cmsdk2.PostSpec_policy_set)
    __swig_setmethods__["contentCount"] = _cmsdk2.PostSpec_contentCount_set
    __swig_getmethods__["contentCount"] = _cmsdk2.PostSpec_contentCount_get
    if _newclass:
        contentCount = _swig_property(_cmsdk2.PostSpec_contentCount_get, _cmsdk2.PostSpec_contentCount_set)
    __swig_setmethods__["name"] = _cmsdk2.PostSpec_name_set
    __swig_getmethods__["name"] = _cmsdk2.PostSpec_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.PostSpec_name_get, _cmsdk2.PostSpec_name_set)
    __swig_setmethods__["content"] = _cmsdk2.PostSpec_content_set
    __swig_getmethods__["content"] = _cmsdk2.PostSpec_content_get
    if _newclass:
        content = _swig_property(_cmsdk2.PostSpec_content_get, _cmsdk2.PostSpec_content_set)

    def toXML(self):
        return _cmsdk2.PostSpec_toXML(self)

    def fromXML(self, *args):
        return _cmsdk2.PostSpec_fromXML(self, *args)

    def contentFromXML(self, node):
        return _cmsdk2.PostSpec_contentFromXML(self, node)

    def addContentToMsg(self, msg):
        return _cmsdk2.PostSpec_addContentToMsg(self, msg)

    def __init__(self):
        this = _cmsdk2.new_PostSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_PostSpec
    __del__ = lambda self: None
PostSpec_swigregister = _cmsdk2.PostSpec_swigregister
PostSpec_swigregister(PostSpec)

class SignalSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SignalSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SignalSpec, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _cmsdk2.SignalSpec_type_set
    __swig_getmethods__["type"] = _cmsdk2.SignalSpec_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.SignalSpec_type_get, _cmsdk2.SignalSpec_type_set)
    __swig_setmethods__["name"] = _cmsdk2.SignalSpec_name_set
    __swig_getmethods__["name"] = _cmsdk2.SignalSpec_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.SignalSpec_name_get, _cmsdk2.SignalSpec_name_set)

    def toXML(self):
        return _cmsdk2.SignalSpec_toXML(self)

    def fromXML(self, *args):
        return _cmsdk2.SignalSpec_fromXML(self, *args)

    def __init__(self):
        this = _cmsdk2.new_SignalSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_SignalSpec
    __del__ = lambda self: None
SignalSpec_swigregister = _cmsdk2.SignalSpec_swigregister
SignalSpec_swigregister(SignalSpec)

class TriggerSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TriggerSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TriggerSpec, name)
    __repr__ = _swig_repr

    def reset(self, s=0):
        return _cmsdk2.TriggerSpec_reset(self, s)

    def getFilterSpec(self, n):
        return _cmsdk2.TriggerSpec_getFilterSpec(self, n)

    def getRetrieveSpec(self, *args):
        return _cmsdk2.TriggerSpec_getRetrieveSpec(self, *args)

    def getQuerySpec(self, *args):
        return _cmsdk2.TriggerSpec_getQuerySpec(self, *args)

    def getPostSpecs(self, *args):
        return _cmsdk2.TriggerSpec_getPostSpecs(self, *args)

    def getPostSpec(self, *args):
        return _cmsdk2.TriggerSpec_getPostSpec(self, *args)

    def getSignalSpec(self, *args):
        return _cmsdk2.TriggerSpec_getSignalSpec(self, *args)

    def toXML(self):
        return _cmsdk2.TriggerSpec_toXML(self)
    __swig_setmethods__["size"] = _cmsdk2.TriggerSpec_size_set
    __swig_getmethods__["size"] = _cmsdk2.TriggerSpec_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.TriggerSpec_size_get, _cmsdk2.TriggerSpec_size_set)
    __swig_setmethods__["cid"] = _cmsdk2.TriggerSpec_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.TriggerSpec_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.TriggerSpec_cid_get, _cmsdk2.TriggerSpec_cid_set)
    __swig_setmethods__["id"] = _cmsdk2.TriggerSpec_id_set
    __swig_getmethods__["id"] = _cmsdk2.TriggerSpec_id_get
    if _newclass:
        id = _swig_property(_cmsdk2.TriggerSpec_id_get, _cmsdk2.TriggerSpec_id_set)
    __swig_setmethods__["componentID"] = _cmsdk2.TriggerSpec_componentID_set
    __swig_getmethods__["componentID"] = _cmsdk2.TriggerSpec_componentID_get
    if _newclass:
        componentID = _swig_property(_cmsdk2.TriggerSpec_componentID_get, _cmsdk2.TriggerSpec_componentID_set)
    __swig_setmethods__["interval"] = _cmsdk2.TriggerSpec_interval_set
    __swig_getmethods__["interval"] = _cmsdk2.TriggerSpec_interval_get
    if _newclass:
        interval = _swig_property(_cmsdk2.TriggerSpec_interval_get, _cmsdk2.TriggerSpec_interval_set)
    __swig_setmethods__["_from"] = _cmsdk2.TriggerSpec__from_set
    __swig_getmethods__["_from"] = _cmsdk2.TriggerSpec__from_get
    if _newclass:
        _from = _swig_property(_cmsdk2.TriggerSpec__from_get, _cmsdk2.TriggerSpec__from_set)
    __swig_setmethods__["to"] = _cmsdk2.TriggerSpec_to_set
    __swig_getmethods__["to"] = _cmsdk2.TriggerSpec_to_get
    if _newclass:
        to = _swig_property(_cmsdk2.TriggerSpec_to_get, _cmsdk2.TriggerSpec_to_set)
    __swig_setmethods__["tag"] = _cmsdk2.TriggerSpec_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.TriggerSpec_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.TriggerSpec_tag_get, _cmsdk2.TriggerSpec_tag_set)
    __swig_setmethods__["delay"] = _cmsdk2.TriggerSpec_delay_set
    __swig_getmethods__["delay"] = _cmsdk2.TriggerSpec_delay_get
    if _newclass:
        delay = _swig_property(_cmsdk2.TriggerSpec_delay_get, _cmsdk2.TriggerSpec_delay_set)
    __swig_setmethods__["grouppolicy"] = _cmsdk2.TriggerSpec_grouppolicy_set
    __swig_getmethods__["grouppolicy"] = _cmsdk2.TriggerSpec_grouppolicy_get
    if _newclass:
        grouppolicy = _swig_property(_cmsdk2.TriggerSpec_grouppolicy_get, _cmsdk2.TriggerSpec_grouppolicy_set)
    __swig_setmethods__["groupparam"] = _cmsdk2.TriggerSpec_groupparam_set
    __swig_getmethods__["groupparam"] = _cmsdk2.TriggerSpec_groupparam_get
    if _newclass:
        groupparam = _swig_property(_cmsdk2.TriggerSpec_groupparam_get, _cmsdk2.TriggerSpec_groupparam_set)
    __swig_setmethods__["crankID"] = _cmsdk2.TriggerSpec_crankID_set
    __swig_getmethods__["crankID"] = _cmsdk2.TriggerSpec_crankID_get
    if _newclass:
        crankID = _swig_property(_cmsdk2.TriggerSpec_crankID_get, _cmsdk2.TriggerSpec_crankID_set)
    __swig_setmethods__["group"] = _cmsdk2.TriggerSpec_group_set
    __swig_getmethods__["group"] = _cmsdk2.TriggerSpec_group_get
    if _newclass:
        group = _swig_property(_cmsdk2.TriggerSpec_group_get, _cmsdk2.TriggerSpec_group_set)
    __swig_setmethods__["type"] = _cmsdk2.TriggerSpec_type_set
    __swig_getmethods__["type"] = _cmsdk2.TriggerSpec_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.TriggerSpec_type_get, _cmsdk2.TriggerSpec_type_set)
    __swig_setmethods__["context"] = _cmsdk2.TriggerSpec_context_set
    __swig_getmethods__["context"] = _cmsdk2.TriggerSpec_context_get
    if _newclass:
        context = _swig_property(_cmsdk2.TriggerSpec_context_get, _cmsdk2.TriggerSpec_context_set)
    __swig_setmethods__["triggerContext"] = _cmsdk2.TriggerSpec_triggerContext_set
    __swig_getmethods__["triggerContext"] = _cmsdk2.TriggerSpec_triggerContext_get
    if _newclass:
        triggerContext = _swig_property(_cmsdk2.TriggerSpec_triggerContext_get, _cmsdk2.TriggerSpec_triggerContext_set)
    __swig_setmethods__["name"] = _cmsdk2.TriggerSpec_name_set
    __swig_getmethods__["name"] = _cmsdk2.TriggerSpec_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.TriggerSpec_name_get, _cmsdk2.TriggerSpec_name_set)
    __swig_setmethods__["filterCount"] = _cmsdk2.TriggerSpec_filterCount_set
    __swig_getmethods__["filterCount"] = _cmsdk2.TriggerSpec_filterCount_get
    if _newclass:
        filterCount = _swig_property(_cmsdk2.TriggerSpec_filterCount_get, _cmsdk2.TriggerSpec_filterCount_set)
    __swig_setmethods__["retrieveCount"] = _cmsdk2.TriggerSpec_retrieveCount_set
    __swig_getmethods__["retrieveCount"] = _cmsdk2.TriggerSpec_retrieveCount_get
    if _newclass:
        retrieveCount = _swig_property(_cmsdk2.TriggerSpec_retrieveCount_get, _cmsdk2.TriggerSpec_retrieveCount_set)
    __swig_setmethods__["queryCount"] = _cmsdk2.TriggerSpec_queryCount_set
    __swig_getmethods__["queryCount"] = _cmsdk2.TriggerSpec_queryCount_get
    if _newclass:
        queryCount = _swig_property(_cmsdk2.TriggerSpec_queryCount_get, _cmsdk2.TriggerSpec_queryCount_set)
    __swig_setmethods__["postCount"] = _cmsdk2.TriggerSpec_postCount_set
    __swig_getmethods__["postCount"] = _cmsdk2.TriggerSpec_postCount_get
    if _newclass:
        postCount = _swig_property(_cmsdk2.TriggerSpec_postCount_get, _cmsdk2.TriggerSpec_postCount_set)
    __swig_setmethods__["signalCount"] = _cmsdk2.TriggerSpec_signalCount_set
    __swig_getmethods__["signalCount"] = _cmsdk2.TriggerSpec_signalCount_get
    if _newclass:
        signalCount = _swig_property(_cmsdk2.TriggerSpec_signalCount_get, _cmsdk2.TriggerSpec_signalCount_set)

    def __init__(self):
        this = _cmsdk2.new_TriggerSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_TriggerSpec
    __del__ = lambda self: None
TriggerSpec_swigregister = _cmsdk2.TriggerSpec_swigregister
TriggerSpec_swigregister(TriggerSpec)

class ComponentSetup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ComponentSetup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ComponentSetup, name)
    __repr__ = _swig_repr

    def reset(self):
        return _cmsdk2.ComponentSetup_reset(self)
    __swig_setmethods__["size"] = _cmsdk2.ComponentSetup_size_set
    __swig_getmethods__["size"] = _cmsdk2.ComponentSetup_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.ComponentSetup_size_get, _cmsdk2.ComponentSetup_size_set)
    __swig_setmethods__["cid"] = _cmsdk2.ComponentSetup_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.ComponentSetup_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.ComponentSetup_cid_get, _cmsdk2.ComponentSetup_cid_set)
    __swig_setmethods__["componentID"] = _cmsdk2.ComponentSetup_componentID_set
    __swig_getmethods__["componentID"] = _cmsdk2.ComponentSetup_componentID_get
    if _newclass:
        componentID = _swig_property(_cmsdk2.ComponentSetup_componentID_get, _cmsdk2.ComponentSetup_componentID_set)
    __swig_setmethods__["spaceID"] = _cmsdk2.ComponentSetup_spaceID_set
    __swig_getmethods__["spaceID"] = _cmsdk2.ComponentSetup_spaceID_get
    if _newclass:
        spaceID = _swig_property(_cmsdk2.ComponentSetup_spaceID_get, _cmsdk2.ComponentSetup_spaceID_set)
    __swig_setmethods__["tag"] = _cmsdk2.ComponentSetup_tag_set
    __swig_getmethods__["tag"] = _cmsdk2.ComponentSetup_tag_get
    if _newclass:
        tag = _swig_property(_cmsdk2.ComponentSetup_tag_get, _cmsdk2.ComponentSetup_tag_set)
    __swig_setmethods__["type"] = _cmsdk2.ComponentSetup_type_set
    __swig_getmethods__["type"] = _cmsdk2.ComponentSetup_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.ComponentSetup_type_get, _cmsdk2.ComponentSetup_type_set)
    __swig_setmethods__["name"] = _cmsdk2.ComponentSetup_name_set
    __swig_getmethods__["name"] = _cmsdk2.ComponentSetup_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.ComponentSetup_name_get, _cmsdk2.ComponentSetup_name_set)
    __swig_setmethods__["logfile"] = _cmsdk2.ComponentSetup_logfile_set
    __swig_getmethods__["logfile"] = _cmsdk2.ComponentSetup_logfile_get
    if _newclass:
        logfile = _swig_property(_cmsdk2.ComponentSetup_logfile_get, _cmsdk2.ComponentSetup_logfile_set)
    __swig_setmethods__["verbose"] = _cmsdk2.ComponentSetup_verbose_set
    __swig_getmethods__["verbose"] = _cmsdk2.ComponentSetup_verbose_get
    if _newclass:
        verbose = _swig_property(_cmsdk2.ComponentSetup_verbose_get, _cmsdk2.ComponentSetup_verbose_set)
    __swig_setmethods__["debug"] = _cmsdk2.ComponentSetup_debug_set
    __swig_getmethods__["debug"] = _cmsdk2.ComponentSetup_debug_get
    if _newclass:
        debug = _swig_property(_cmsdk2.ComponentSetup_debug_get, _cmsdk2.ComponentSetup_debug_set)
    __swig_setmethods__["migration"] = _cmsdk2.ComponentSetup_migration_set
    __swig_getmethods__["migration"] = _cmsdk2.ComponentSetup_migration_get
    if _newclass:
        migration = _swig_property(_cmsdk2.ComponentSetup_migration_get, _cmsdk2.ComponentSetup_migration_set)
    __swig_setmethods__["priority"] = _cmsdk2.ComponentSetup_priority_set
    __swig_getmethods__["priority"] = _cmsdk2.ComponentSetup_priority_get
    if _newclass:
        priority = _swig_property(_cmsdk2.ComponentSetup_priority_get, _cmsdk2.ComponentSetup_priority_set)
    __swig_setmethods__["function"] = _cmsdk2.ComponentSetup_function_set
    __swig_getmethods__["function"] = _cmsdk2.ComponentSetup_function_get
    if _newclass:
        function = _swig_property(_cmsdk2.ComponentSetup_function_get, _cmsdk2.ComponentSetup_function_set)
    __swig_setmethods__["root"] = _cmsdk2.ComponentSetup_root_set
    __swig_getmethods__["root"] = _cmsdk2.ComponentSetup_root_get
    if _newclass:
        root = _swig_property(_cmsdk2.ComponentSetup_root_get, _cmsdk2.ComponentSetup_root_set)
    __swig_setmethods__["rotate"] = _cmsdk2.ComponentSetup_rotate_set
    __swig_getmethods__["rotate"] = _cmsdk2.ComponentSetup_rotate_get
    if _newclass:
        rotate = _swig_property(_cmsdk2.ComponentSetup_rotate_get, _cmsdk2.ComponentSetup_rotate_set)
    __swig_setmethods__["consoleOutput"] = _cmsdk2.ComponentSetup_consoleOutput_set
    __swig_getmethods__["consoleOutput"] = _cmsdk2.ComponentSetup_consoleOutput_get
    if _newclass:
        consoleOutput = _swig_property(_cmsdk2.ComponentSetup_consoleOutput_get, _cmsdk2.ComponentSetup_consoleOutput_set)
    __swig_setmethods__["autoRestart"] = _cmsdk2.ComponentSetup_autoRestart_set
    __swig_getmethods__["autoRestart"] = _cmsdk2.ComponentSetup_autoRestart_get
    if _newclass:
        autoRestart = _swig_property(_cmsdk2.ComponentSetup_autoRestart_get, _cmsdk2.ComponentSetup_autoRestart_set)
    __swig_setmethods__["subdir"] = _cmsdk2.ComponentSetup_subdir_set
    __swig_getmethods__["subdir"] = _cmsdk2.ComponentSetup_subdir_get
    if _newclass:
        subdir = _swig_property(_cmsdk2.ComponentSetup_subdir_get, _cmsdk2.ComponentSetup_subdir_set)
    __swig_setmethods__["extension"] = _cmsdk2.ComponentSetup_extension_set
    __swig_getmethods__["extension"] = _cmsdk2.ComponentSetup_extension_get
    if _newclass:
        extension = _swig_property(_cmsdk2.ComponentSetup_extension_get, _cmsdk2.ComponentSetup_extension_set)
    __swig_setmethods__["base"] = _cmsdk2.ComponentSetup_base_set
    __swig_getmethods__["base"] = _cmsdk2.ComponentSetup_base_get
    if _newclass:
        base = _swig_property(_cmsdk2.ComponentSetup_base_get, _cmsdk2.ComponentSetup_base_set)
    __swig_setmethods__["keys"] = _cmsdk2.ComponentSetup_keys_set
    __swig_getmethods__["keys"] = _cmsdk2.ComponentSetup_keys_get
    if _newclass:
        keys = _swig_property(_cmsdk2.ComponentSetup_keys_get, _cmsdk2.ComponentSetup_keys_set)
    __swig_setmethods__["value"] = _cmsdk2.ComponentSetup_value_set
    __swig_getmethods__["value"] = _cmsdk2.ComponentSetup_value_get
    if _newclass:
        value = _swig_property(_cmsdk2.ComponentSetup_value_get, _cmsdk2.ComponentSetup_value_set)
    __swig_setmethods__["operation"] = _cmsdk2.ComponentSetup_operation_set
    __swig_getmethods__["operation"] = _cmsdk2.ComponentSetup_operation_get
    if _newclass:
        operation = _swig_property(_cmsdk2.ComponentSetup_operation_get, _cmsdk2.ComponentSetup_operation_set)
    __swig_setmethods__["timeout"] = _cmsdk2.ComponentSetup_timeout_set
    __swig_getmethods__["timeout"] = _cmsdk2.ComponentSetup_timeout_get
    if _newclass:
        timeout = _swig_property(_cmsdk2.ComponentSetup_timeout_get, _cmsdk2.ComponentSetup_timeout_set)
    __swig_setmethods__["maxcount"] = _cmsdk2.ComponentSetup_maxcount_set
    __swig_getmethods__["maxcount"] = _cmsdk2.ComponentSetup_maxcount_get
    if _newclass:
        maxcount = _swig_property(_cmsdk2.ComponentSetup_maxcount_get, _cmsdk2.ComponentSetup_maxcount_set)
    __swig_setmethods__["maxsize"] = _cmsdk2.ComponentSetup_maxsize_set
    __swig_getmethods__["maxsize"] = _cmsdk2.ComponentSetup_maxsize_get
    if _newclass:
        maxsize = _swig_property(_cmsdk2.ComponentSetup_maxsize_get, _cmsdk2.ComponentSetup_maxsize_set)
    __swig_setmethods__["interval"] = _cmsdk2.ComponentSetup_interval_set
    __swig_getmethods__["interval"] = _cmsdk2.ComponentSetup_interval_get
    if _newclass:
        interval = _swig_property(_cmsdk2.ComponentSetup_interval_get, _cmsdk2.ComponentSetup_interval_set)
    __swig_setmethods__["cmdline"] = _cmsdk2.ComponentSetup_cmdline_set
    __swig_getmethods__["cmdline"] = _cmsdk2.ComponentSetup_cmdline_get
    if _newclass:
        cmdline = _swig_property(_cmsdk2.ComponentSetup_cmdline_get, _cmsdk2.ComponentSetup_cmdline_set)
    __swig_setmethods__["setup"] = _cmsdk2.ComponentSetup_setup_set
    __swig_getmethods__["setup"] = _cmsdk2.ComponentSetup_setup_get
    if _newclass:
        setup = _swig_property(_cmsdk2.ComponentSetup_setup_get, _cmsdk2.ComponentSetup_setup_set)

    def __init__(self):
        this = _cmsdk2.new_ComponentSetup()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_ComponentSetup
    __del__ = lambda self: None
ComponentSetup_swigregister = _cmsdk2.ComponentSetup_swigregister
ComponentSetup_swigregister(ComponentSetup)

class CustomView(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CustomView, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CustomView, name)
    __repr__ = _swig_repr
    __swig_setmethods__["compID"] = _cmsdk2.CustomView_compID_set
    __swig_getmethods__["compID"] = _cmsdk2.CustomView_compID_get
    if _newclass:
        compID = _swig_property(_cmsdk2.CustomView_compID_get, _cmsdk2.CustomView_compID_set)
    __swig_setmethods__["name"] = _cmsdk2.CustomView_name_set
    __swig_getmethods__["name"] = _cmsdk2.CustomView_name_get
    if _newclass:
        name = _swig_property(_cmsdk2.CustomView_name_get, _cmsdk2.CustomView_name_set)
    __swig_setmethods__["templateURL"] = _cmsdk2.CustomView_templateURL_set
    __swig_getmethods__["templateURL"] = _cmsdk2.CustomView_templateURL_get
    if _newclass:
        templateURL = _swig_property(_cmsdk2.CustomView_templateURL_get, _cmsdk2.CustomView_templateURL_set)

    def __init__(self):
        this = _cmsdk2.new_CustomView()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_CustomView
    __del__ = lambda self: None
CustomView_swigregister = _cmsdk2.CustomView_swigregister
CustomView_swigregister(CustomView)

class ComponentSpec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ComponentSpec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ComponentSpec, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _cmsdk2.new_ComponentSpec()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_ComponentSpec
    __del__ = lambda self: None
    __swig_setmethods__["setup"] = _cmsdk2.ComponentSpec_setup_set
    __swig_getmethods__["setup"] = _cmsdk2.ComponentSpec_setup_get
    if _newclass:
        setup = _swig_property(_cmsdk2.ComponentSpec_setup_get, _cmsdk2.ComponentSpec_setup_set)
    __swig_setmethods__["triggers"] = _cmsdk2.ComponentSpec_triggers_set
    __swig_getmethods__["triggers"] = _cmsdk2.ComponentSpec_triggers_get
    if _newclass:
        triggers = _swig_property(_cmsdk2.ComponentSpec_triggers_get, _cmsdk2.ComponentSpec_triggers_set)
    __swig_setmethods__["customViews"] = _cmsdk2.ComponentSpec_customViews_set
    __swig_getmethods__["customViews"] = _cmsdk2.ComponentSpec_customViews_get
    if _newclass:
        customViews = _swig_property(_cmsdk2.ComponentSpec_customViews_get, _cmsdk2.ComponentSpec_customViews_set)
ComponentSpec_swigregister = _cmsdk2.ComponentSpec_swigregister
ComponentSpec_swigregister(ComponentSpec)

CRANKAPI_FAILED = _cmsdk2.CRANKAPI_FAILED
CRANKAPI_INUSE = _cmsdk2.CRANKAPI_INUSE
CRANKAPI_RUNNING = _cmsdk2.CRANKAPI_RUNNING
CRANKAPI_IDLE = _cmsdk2.CRANKAPI_IDLE
POST_FAILED = _cmsdk2.POST_FAILED
POST_NOSPEC = _cmsdk2.POST_NOSPEC
POST_OUTOFCONTEXT = _cmsdk2.POST_OUTOFCONTEXT
QUERY_FAILED = _cmsdk2.QUERY_FAILED
QUERY_TIMEOUT = _cmsdk2.QUERY_TIMEOUT
QUERY_NAME_UNKNOWN = _cmsdk2.QUERY_NAME_UNKNOWN
QUERY_COMPONENT_UNKNOWN = _cmsdk2.QUERY_COMPONENT_UNKNOWN
QUERY_QUERYFAILED = _cmsdk2.QUERY_QUERYFAILED
QUERY_SUCCESS = _cmsdk2.QUERY_SUCCESS
QUERY_NOT_AVAILABLE = _cmsdk2.QUERY_NOT_AVAILABLE
QUERY_NOT_REACHABLE = _cmsdk2.QUERY_NOT_REACHABLE
LOG_COMPONENT = _cmsdk2.LOG_COMPONENT
class PsyAPI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PsyAPI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PsyAPI, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CTRL_SYSTEM_READY"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_READY_set
    __swig_getmethods__["CTRL_SYSTEM_READY"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_READY_get
    if _newclass:
        CTRL_SYSTEM_READY = _swig_property(_cmsdk2.PsyAPI_CTRL_SYSTEM_READY_get, _cmsdk2.PsyAPI_CTRL_SYSTEM_READY_set)
    __swig_setmethods__["CTRL_PROCESS_INITIALISE"] = _cmsdk2.PsyAPI_CTRL_PROCESS_INITIALISE_set
    __swig_getmethods__["CTRL_PROCESS_INITIALISE"] = _cmsdk2.PsyAPI_CTRL_PROCESS_INITIALISE_get
    if _newclass:
        CTRL_PROCESS_INITIALISE = _swig_property(_cmsdk2.PsyAPI_CTRL_PROCESS_INITIALISE_get, _cmsdk2.PsyAPI_CTRL_PROCESS_INITIALISE_set)
    __swig_setmethods__["CTRL_PROCESS_GREETING"] = _cmsdk2.PsyAPI_CTRL_PROCESS_GREETING_set
    __swig_getmethods__["CTRL_PROCESS_GREETING"] = _cmsdk2.PsyAPI_CTRL_PROCESS_GREETING_get
    if _newclass:
        CTRL_PROCESS_GREETING = _swig_property(_cmsdk2.PsyAPI_CTRL_PROCESS_GREETING_get, _cmsdk2.PsyAPI_CTRL_PROCESS_GREETING_set)
    __swig_setmethods__["CTRL_PROCESS_SHUTDOWN"] = _cmsdk2.PsyAPI_CTRL_PROCESS_SHUTDOWN_set
    __swig_getmethods__["CTRL_PROCESS_SHUTDOWN"] = _cmsdk2.PsyAPI_CTRL_PROCESS_SHUTDOWN_get
    if _newclass:
        CTRL_PROCESS_SHUTDOWN = _swig_property(_cmsdk2.PsyAPI_CTRL_PROCESS_SHUTDOWN_get, _cmsdk2.PsyAPI_CTRL_PROCESS_SHUTDOWN_set)
    __swig_setmethods__["CTRL_CONTEXT_CHANGE"] = _cmsdk2.PsyAPI_CTRL_CONTEXT_CHANGE_set
    __swig_getmethods__["CTRL_CONTEXT_CHANGE"] = _cmsdk2.PsyAPI_CTRL_CONTEXT_CHANGE_get
    if _newclass:
        CTRL_CONTEXT_CHANGE = _swig_property(_cmsdk2.PsyAPI_CTRL_CONTEXT_CHANGE_get, _cmsdk2.PsyAPI_CTRL_CONTEXT_CHANGE_set)
    __swig_setmethods__["CTRL_SYSTEM_SHUTDOWN"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTDOWN_set
    __swig_getmethods__["CTRL_SYSTEM_SHUTDOWN"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTDOWN_get
    if _newclass:
        CTRL_SYSTEM_SHUTDOWN = _swig_property(_cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTDOWN_get, _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTDOWN_set)
    __swig_setmethods__["CTRL_SYSTEM_SHUTTINGDOWN"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTTINGDOWN_set
    __swig_getmethods__["CTRL_SYSTEM_SHUTTINGDOWN"] = _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTTINGDOWN_get
    if _newclass:
        CTRL_SYSTEM_SHUTTINGDOWN = _swig_property(_cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTTINGDOWN_get, _cmsdk2.PsyAPI_CTRL_SYSTEM_SHUTTINGDOWN_set)
    __swig_setmethods__["CTRL_TRIGGER"] = _cmsdk2.PsyAPI_CTRL_TRIGGER_set
    __swig_getmethods__["CTRL_TRIGGER"] = _cmsdk2.PsyAPI_CTRL_TRIGGER_get
    if _newclass:
        CTRL_TRIGGER = _swig_property(_cmsdk2.PsyAPI_CTRL_TRIGGER_get, _cmsdk2.PsyAPI_CTRL_TRIGGER_set)
    __swig_setmethods__["CTRL_QUERY"] = _cmsdk2.PsyAPI_CTRL_QUERY_set
    __swig_getmethods__["CTRL_QUERY"] = _cmsdk2.PsyAPI_CTRL_QUERY_get
    if _newclass:
        CTRL_QUERY = _swig_property(_cmsdk2.PsyAPI_CTRL_QUERY_get, _cmsdk2.PsyAPI_CTRL_QUERY_set)
    __swig_setmethods__["CTRL_QUERY_REPLY"] = _cmsdk2.PsyAPI_CTRL_QUERY_REPLY_set
    __swig_getmethods__["CTRL_QUERY_REPLY"] = _cmsdk2.PsyAPI_CTRL_QUERY_REPLY_get
    if _newclass:
        CTRL_QUERY_REPLY = _swig_property(_cmsdk2.PsyAPI_CTRL_QUERY_REPLY_get, _cmsdk2.PsyAPI_CTRL_QUERY_REPLY_set)
    __swig_setmethods__["CTRL_PULLCOMPONENTDATA"] = _cmsdk2.PsyAPI_CTRL_PULLCOMPONENTDATA_set
    __swig_getmethods__["CTRL_PULLCOMPONENTDATA"] = _cmsdk2.PsyAPI_CTRL_PULLCOMPONENTDATA_get
    if _newclass:
        CTRL_PULLCOMPONENTDATA = _swig_property(_cmsdk2.PsyAPI_CTRL_PULLCOMPONENTDATA_get, _cmsdk2.PsyAPI_CTRL_PULLCOMPONENTDATA_set)
    __swig_setmethods__["CTRL_CREATECUSTOMPAGE"] = _cmsdk2.PsyAPI_CTRL_CREATECUSTOMPAGE_set
    __swig_getmethods__["CTRL_CREATECUSTOMPAGE"] = _cmsdk2.PsyAPI_CTRL_CREATECUSTOMPAGE_get
    if _newclass:
        CTRL_CREATECUSTOMPAGE = _swig_property(_cmsdk2.PsyAPI_CTRL_CREATECUSTOMPAGE_get, _cmsdk2.PsyAPI_CTRL_CREATECUSTOMPAGE_set)
    __swig_setmethods__["CTRL_ADDSUBSCRIPTION"] = _cmsdk2.PsyAPI_CTRL_ADDSUBSCRIPTION_set
    __swig_getmethods__["CTRL_ADDSUBSCRIPTION"] = _cmsdk2.PsyAPI_CTRL_ADDSUBSCRIPTION_get
    if _newclass:
        CTRL_ADDSUBSCRIPTION = _swig_property(_cmsdk2.PsyAPI_CTRL_ADDSUBSCRIPTION_get, _cmsdk2.PsyAPI_CTRL_ADDSUBSCRIPTION_set)
    __swig_setmethods__["CTRL_RETRIEVESYSTEMIDS"] = _cmsdk2.PsyAPI_CTRL_RETRIEVESYSTEMIDS_set
    __swig_getmethods__["CTRL_RETRIEVESYSTEMIDS"] = _cmsdk2.PsyAPI_CTRL_RETRIEVESYSTEMIDS_get
    if _newclass:
        CTRL_RETRIEVESYSTEMIDS = _swig_property(_cmsdk2.PsyAPI_CTRL_RETRIEVESYSTEMIDS_get, _cmsdk2.PsyAPI_CTRL_RETRIEVESYSTEMIDS_set)
    __swig_setmethods__["CTRL_INTERSYSTEM_QUERY"] = _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_set
    __swig_getmethods__["CTRL_INTERSYSTEM_QUERY"] = _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_get
    if _newclass:
        CTRL_INTERSYSTEM_QUERY = _swig_property(_cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_get, _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_set)
    __swig_setmethods__["CTRL_INTERSYSTEM_QUERY_REPLY"] = _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_REPLY_set
    __swig_getmethods__["CTRL_INTERSYSTEM_QUERY_REPLY"] = _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_REPLY_get
    if _newclass:
        CTRL_INTERSYSTEM_QUERY_REPLY = _swig_property(_cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_REPLY_get, _cmsdk2.PsyAPI_CTRL_INTERSYSTEM_QUERY_REPLY_set)

    def __init__(self, space):
        this = _cmsdk2.new_PsyAPI(space)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_PsyAPI
    __del__ = lambda self: None
    if _newclass:
        fromPython = staticmethod(_cmsdk2.PsyAPI_fromPython)
    else:
        fromPython = _cmsdk2.PsyAPI_fromPython
    if _newclass:
        fromPythonAddressOf = staticmethod(_cmsdk2.PsyAPI_fromPythonAddressOf)
    else:
        fromPythonAddressOf = _cmsdk2.PsyAPI_fromPythonAddressOf

    def setAutoDelete(self, autodel):
        return _cmsdk2.PsyAPI_setAutoDelete(self, autodel)

    def isRunning(self):
        return _cmsdk2.PsyAPI_isRunning(self)

    def shouldContinue(self):
        return _cmsdk2.PsyAPI_shouldContinue(self)

    def getCommandlineBasedir(self):
        return _cmsdk2.PsyAPI_getCommandlineBasedir(self)

    def setCommandlineBasedir(self, cmdlineBasedir):
        return _cmsdk2.PsyAPI_setCommandlineBasedir(self, cmdlineBasedir)

    def getModuleName(self, *args):
        return _cmsdk2.PsyAPI_getModuleName(self, *args)

    def getOtherModuleName(self, id):
        return _cmsdk2.PsyAPI_getOtherModuleName(self, id)

    def getInputQueueSize(self):
        return _cmsdk2.PsyAPI_getInputQueueSize(self)

    def typeToText(self, type):
        return _cmsdk2.PsyAPI_typeToText(self, type)

    def contextToText(self, context):
        return _cmsdk2.PsyAPI_contextToText(self, context)

    def getCurrentScriptLanguage(self, *args):
        return _cmsdk2.PsyAPI_getCurrentScriptLanguage(self, *args)

    def getCurrentScript(self, *args):
        return _cmsdk2.PsyAPI_getCurrentScript(self, *args)

    def getCurrentScriptFilename(self, *args):
        return _cmsdk2.PsyAPI_getCurrentScriptFilename(self, *args)

    def getCurrentPostNames(self):
        return _cmsdk2.PsyAPI_getCurrentPostNames(self)

    def hasCurrentSignalName(self, name):
        return _cmsdk2.PsyAPI_hasCurrentSignalName(self, name)

    def hasCurrentQueryName(self, name):
        return _cmsdk2.PsyAPI_hasCurrentQueryName(self, name)

    def hasCurrentRetrieveName(self, name):
        return _cmsdk2.PsyAPI_hasCurrentRetrieveName(self, name)

    def hasCurrentPostName(self, name):
        return _cmsdk2.PsyAPI_hasCurrentPostName(self, name)

    def getCurrentTriggerName(self):
        return _cmsdk2.PsyAPI_getCurrentTriggerName(self)

    def getCurrentTriggerContext(self):
        return _cmsdk2.PsyAPI_getCurrentTriggerContext(self)

    def waitForNewMessage(self, *args):
        return _cmsdk2.PsyAPI_waitForNewMessage(self, *args)

    def getCurrentMessageReceiveTime(self):
        return _cmsdk2.PsyAPI_getCurrentMessageReceiveTime(self)

    def postOutputMessage(self, *args):
        return _cmsdk2.PsyAPI_postOutputMessage(self, *args)

    def emitSignal(self, name, msg=None):
        return _cmsdk2.PsyAPI_emitSignal(self, name, msg)

    def waitForSignal(self, name, timeout, lastReceivedTime=0):
        return _cmsdk2.PsyAPI_waitForSignal(self, name, timeout, lastReceivedTime)

    def retrieveAllSystemIDs(self):
        return _cmsdk2.PsyAPI_retrieveAllSystemIDs(self)

    def addSubscription(self, xml):
        return _cmsdk2.PsyAPI_addSubscription(self, xml)

    def addPsyProbeCustomView(self, name, templateURL):
        return _cmsdk2.PsyAPI_addPsyProbeCustomView(self, name, templateURL)

    def removePsyProbeCustomView(self, name):
        return _cmsdk2.PsyAPI_removePsyProbeCustomView(self, name)

    def setPrivateData(self, name, data, size, mimetype=None):
        return _cmsdk2.PsyAPI_setPrivateData(self, name, data, size, mimetype)

    def getPrivateDataSize(self, name):
        return _cmsdk2.PsyAPI_getPrivateDataSize(self, name)

    def getPrivateDataCopy(self, name, size):
        return _cmsdk2.PsyAPI_getPrivateDataCopy(self, name, size)

    def getPrivateData(self, name, data, maxSize):
        return _cmsdk2.PsyAPI_getPrivateData(self, name, data, maxSize)

    def deletePrivateData(self, name):
        return _cmsdk2.PsyAPI_deletePrivateData(self, name)

    def createParameter(self, *args):
        return _cmsdk2.PsyAPI_createParameter(self, *args)

    def hasParameter(self, name):
        return _cmsdk2.PsyAPI_hasParameter(self, name)

    def deleteParameter(self, name):
        return _cmsdk2.PsyAPI_deleteParameter(self, name)

    def getParameterDataType(self, name):
        return _cmsdk2.PsyAPI_getParameterDataType(self, name)

    def getParameterValueSize(self, name):
        return _cmsdk2.PsyAPI_getParameterValueSize(self, name)

    def getParameterString(self, name):
        return _cmsdk2.PsyAPI_getParameterString(self, name)

    def getParameterAsBool(self, name):
        return _cmsdk2.PsyAPI_getParameterAsBool(self, name)

    def getParameterInt(self, name):
        return _cmsdk2.PsyAPI_getParameterInt(self, name)

    def getParameterFloat(self, name):
        return _cmsdk2.PsyAPI_getParameterFloat(self, name)

    def getParameter(self, *args):
        return _cmsdk2.PsyAPI_getParameter(self, *args)

    def setParameter(self, *args):
        return _cmsdk2.PsyAPI_setParameter(self, *args)

    def resetParameter(self, name):
        return _cmsdk2.PsyAPI_resetParameter(self, name)

    def tweakParameter(self, name, tweak):
        return _cmsdk2.PsyAPI_tweakParameter(self, name, tweak)

    def retrieveTimeParam(self, result, name, startTime, endTime=0, maxcount=0, maxage=0, timeout=5000):
        return _cmsdk2.PsyAPI_retrieveTimeParam(self, result, name, startTime, endTime, maxcount, maxage, timeout)

    def retrieveStringParam(self, result, name, startString, endString=None, maxcount=0, maxage=0, timeout=5000):
        return _cmsdk2.PsyAPI_retrieveStringParam(self, result, name, startString, endString, maxcount, maxage, timeout)

    def retrieveIntegerParam(self, *args):
        return _cmsdk2.PsyAPI_retrieveIntegerParam(self, *args)

    def retrieveFloatParam(self, *args):
        return _cmsdk2.PsyAPI_retrieveFloatParam(self, *args)

    def retrieve(self, *args):
        return _cmsdk2.PsyAPI_retrieve(self, *args)

    def queryCatalog(self, *args):
        return _cmsdk2.PsyAPI_queryCatalog(self, *args)

    def queryRemoteCatalog(self, *args):
        return _cmsdk2.PsyAPI_queryRemoteCatalog(self, *args)

    def queryReply(self, *args):
        return _cmsdk2.PsyAPI_queryReply(self, *args)

    def logPrint(self, level, formatstring):
        return _cmsdk2.PsyAPI_logPrint(self, level, formatstring)
PsyAPI_swigregister = _cmsdk2.PsyAPI_swigregister
PsyAPI_swigregister(PsyAPI)
cvar = _cmsdk2.cvar

def PsyAPI_fromPython(ptr):
    return _cmsdk2.PsyAPI_fromPython(ptr)
PsyAPI_fromPython = _cmsdk2.PsyAPI_fromPython

def PsyAPI_fromPythonAddressOf(ptr):
    return _cmsdk2.PsyAPI_fromPythonAddressOf(ptr)
PsyAPI_fromPythonAddressOf = _cmsdk2.PsyAPI_fromPythonAddressOf

USEC_YEAR_0_TO_1970 = _cmsdk2.USEC_YEAR_0_TO_1970
SECS_PER_YEAR = _cmsdk2.SECS_PER_YEAR
SECS_PER_MONTH = _cmsdk2.SECS_PER_MONTH
SECS_PER_WEEK = _cmsdk2.SECS_PER_WEEK
SECS_PER_DAY = _cmsdk2.SECS_PER_DAY
SECS_PER_HOUR = _cmsdk2.SECS_PER_HOUR
SECS_PER_MIN = _cmsdk2.SECS_PER_MIN
TIME_YEAR_1970 = _cmsdk2.TIME_YEAR_1970
SECOND_MS = _cmsdk2.SECOND_MS
MINUTE_MS = _cmsdk2.MINUTE_MS
HOUR_MS = _cmsdk2.HOUR_MS
DAY_MS = _cmsdk2.DAY_MS
WEEK_MS = _cmsdk2.WEEK_MS
class PsyDateAndTime(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PsyDateAndTime, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PsyDateAndTime, name)
    __repr__ = _swig_repr
    __swig_setmethods__["usec"] = _cmsdk2.PsyDateAndTime_usec_set
    __swig_getmethods__["usec"] = _cmsdk2.PsyDateAndTime_usec_get
    if _newclass:
        usec = _swig_property(_cmsdk2.PsyDateAndTime_usec_get, _cmsdk2.PsyDateAndTime_usec_set)
    __swig_setmethods__["msec"] = _cmsdk2.PsyDateAndTime_msec_set
    __swig_getmethods__["msec"] = _cmsdk2.PsyDateAndTime_msec_get
    if _newclass:
        msec = _swig_property(_cmsdk2.PsyDateAndTime_msec_get, _cmsdk2.PsyDateAndTime_msec_set)
    __swig_setmethods__["sec"] = _cmsdk2.PsyDateAndTime_sec_set
    __swig_getmethods__["sec"] = _cmsdk2.PsyDateAndTime_sec_get
    if _newclass:
        sec = _swig_property(_cmsdk2.PsyDateAndTime_sec_get, _cmsdk2.PsyDateAndTime_sec_set)
    __swig_setmethods__["min"] = _cmsdk2.PsyDateAndTime_min_set
    __swig_getmethods__["min"] = _cmsdk2.PsyDateAndTime_min_get
    if _newclass:
        min = _swig_property(_cmsdk2.PsyDateAndTime_min_get, _cmsdk2.PsyDateAndTime_min_set)
    __swig_setmethods__["hour"] = _cmsdk2.PsyDateAndTime_hour_set
    __swig_getmethods__["hour"] = _cmsdk2.PsyDateAndTime_hour_get
    if _newclass:
        hour = _swig_property(_cmsdk2.PsyDateAndTime_hour_get, _cmsdk2.PsyDateAndTime_hour_set)
    __swig_setmethods__["day"] = _cmsdk2.PsyDateAndTime_day_set
    __swig_getmethods__["day"] = _cmsdk2.PsyDateAndTime_day_get
    if _newclass:
        day = _swig_property(_cmsdk2.PsyDateAndTime_day_get, _cmsdk2.PsyDateAndTime_day_set)
    __swig_setmethods__["mon"] = _cmsdk2.PsyDateAndTime_mon_set
    __swig_getmethods__["mon"] = _cmsdk2.PsyDateAndTime_mon_get
    if _newclass:
        mon = _swig_property(_cmsdk2.PsyDateAndTime_mon_get, _cmsdk2.PsyDateAndTime_mon_set)
    __swig_setmethods__["year"] = _cmsdk2.PsyDateAndTime_year_set
    __swig_getmethods__["year"] = _cmsdk2.PsyDateAndTime_year_get
    if _newclass:
        year = _swig_property(_cmsdk2.PsyDateAndTime_year_get, _cmsdk2.PsyDateAndTime_year_set)
    __swig_setmethods__["wday"] = _cmsdk2.PsyDateAndTime_wday_set
    __swig_getmethods__["wday"] = _cmsdk2.PsyDateAndTime_wday_get
    if _newclass:
        wday = _swig_property(_cmsdk2.PsyDateAndTime_wday_get, _cmsdk2.PsyDateAndTime_wday_set)
    __swig_setmethods__["yday"] = _cmsdk2.PsyDateAndTime_yday_set
    __swig_getmethods__["yday"] = _cmsdk2.PsyDateAndTime_yday_get
    if _newclass:
        yday = _swig_property(_cmsdk2.PsyDateAndTime_yday_get, _cmsdk2.PsyDateAndTime_yday_set)
    __swig_setmethods__["negative"] = _cmsdk2.PsyDateAndTime_negative_set
    __swig_getmethods__["negative"] = _cmsdk2.PsyDateAndTime_negative_get
    if _newclass:
        negative = _swig_property(_cmsdk2.PsyDateAndTime_negative_get, _cmsdk2.PsyDateAndTime_negative_set)
    __swig_setmethods__["dst"] = _cmsdk2.PsyDateAndTime_dst_set
    __swig_getmethods__["dst"] = _cmsdk2.PsyDateAndTime_dst_get
    if _newclass:
        dst = _swig_property(_cmsdk2.PsyDateAndTime_dst_get, _cmsdk2.PsyDateAndTime_dst_set)
    __swig_setmethods__["dstsec"] = _cmsdk2.PsyDateAndTime_dstsec_set
    __swig_getmethods__["dstsec"] = _cmsdk2.PsyDateAndTime_dstsec_get
    if _newclass:
        dstsec = _swig_property(_cmsdk2.PsyDateAndTime_dstsec_get, _cmsdk2.PsyDateAndTime_dstsec_set)
    __swig_setmethods__["tzsec"] = _cmsdk2.PsyDateAndTime_tzsec_set
    __swig_getmethods__["tzsec"] = _cmsdk2.PsyDateAndTime_tzsec_get
    if _newclass:
        tzsec = _swig_property(_cmsdk2.PsyDateAndTime_tzsec_get, _cmsdk2.PsyDateAndTime_tzsec_set)
    __swig_setmethods__["zonename"] = _cmsdk2.PsyDateAndTime_zonename_set
    __swig_getmethods__["zonename"] = _cmsdk2.PsyDateAndTime_zonename_get
    if _newclass:
        zonename = _swig_property(_cmsdk2.PsyDateAndTime_zonename_get, _cmsdk2.PsyDateAndTime_zonename_set)

    def __init__(self):
        this = _cmsdk2.new_PsyDateAndTime()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_PsyDateAndTime
    __del__ = lambda self: None
PsyDateAndTime_swigregister = _cmsdk2.PsyDateAndTime_swigregister
PsyDateAndTime_swigregister(PsyDateAndTime)


def GetTimeNow():
    return _cmsdk2.GetTimeNow()
GetTimeNow = _cmsdk2.GetTimeNow

def SyncToHardwareClock():
    return _cmsdk2.SyncToHardwareClock()
SyncToHardwareClock = _cmsdk2.SyncToHardwareClock

def SetCurrentNetSyncDif(netTimeDif):
    return _cmsdk2.SetCurrentNetSyncDif(netTimeDif)
SetCurrentNetSyncDif = _cmsdk2.SetCurrentNetSyncDif

def SetCurrentTimeSyncData(tmc, netTimeAdjust):
    return _cmsdk2.SetCurrentTimeSyncData(tmc, netTimeAdjust)
SetCurrentTimeSyncData = _cmsdk2.SetCurrentTimeSyncData

def GetCurrentTimeSyncData(tmc, netTimeAdjust):
    return _cmsdk2.GetCurrentTimeSyncData(tmc, netTimeAdjust)
GetCurrentTimeSyncData = _cmsdk2.GetCurrentTimeSyncData
TMC_MASTER = _cmsdk2.TMC_MASTER
TMC_SLAVE = _cmsdk2.TMC_SLAVE
TMC_SYNC_INTERVAL = _cmsdk2.TMC_SYNC_INTERVAL

def EstNextTMCWrap():
    return _cmsdk2.EstNextTMCWrap()
EstNextTMCWrap = _cmsdk2.EstNextTMCWrap

def GetTimeAge(t):
    return _cmsdk2.GetTimeAge(t)
GetTimeAge = _cmsdk2.GetTimeAge

def GetTimeAgeMS(t):
    return _cmsdk2.GetTimeAgeMS(t)
GetTimeAgeMS = _cmsdk2.GetTimeAgeMS

def GetTimeFromString(str):
    return _cmsdk2.GetTimeFromString(str)
GetTimeFromString = _cmsdk2.GetTimeFromString

def GetHTTPTime(time, buffer, size):
    return _cmsdk2.GetHTTPTime(time, buffer, size)
GetHTTPTime = _cmsdk2.GetHTTPTime

def GetTimeFromPsyDateAndTime(tad):
    return _cmsdk2.GetTimeFromPsyDateAndTime(tad)
GetTimeFromPsyDateAndTime = _cmsdk2.GetTimeFromPsyDateAndTime

def GetTimeOffsetGMT():
    return _cmsdk2.GetTimeOffsetGMT()
GetTimeOffsetGMT = _cmsdk2.GetTimeOffsetGMT

def GetDateAndTime(t, local=True):
    return _cmsdk2.GetDateAndTime(t, local)
GetDateAndTime = _cmsdk2.GetDateAndTime

def GetDateAndTimeUTC(t):
    return _cmsdk2.GetDateAndTimeUTC(t)
GetDateAndTimeUTC = _cmsdk2.GetDateAndTimeUTC

def GetTimeDifference(*args):
    return _cmsdk2.GetTimeDifference(*args)
GetTimeDifference = _cmsdk2.GetTimeDifference

def PrintTime(t, local=True, us=True, ms=True):
    return _cmsdk2.PrintTime(t, local, us, ms)
PrintTime = _cmsdk2.PrintTime

def PrintTimeOnly(t, local=True, us=True, ms=True):
    return _cmsdk2.PrintTimeOnly(t, local, us, ms)
PrintTimeOnly = _cmsdk2.PrintTimeOnly

def PrintTimeDif(t, us=True, ms=True):
    return _cmsdk2.PrintTimeDif(t, us, ms)
PrintTimeDif = _cmsdk2.PrintTimeDif

def PrintDate(t, local=True):
    return _cmsdk2.PrintDate(t, local)
PrintDate = _cmsdk2.PrintDate

def PrintDateSortable(t, local=True):
    return _cmsdk2.PrintDateSortable(t, local)
PrintDateSortable = _cmsdk2.PrintDateSortable

def PrintDateSortableDelimiter(t, arg2, local=True):
    return _cmsdk2.PrintDateSortableDelimiter(t, arg2, local)
PrintDateSortableDelimiter = _cmsdk2.PrintDateSortableDelimiter

def PrintTimeSortable(t, local):
    return _cmsdk2.PrintTimeSortable(t, local)
PrintTimeSortable = _cmsdk2.PrintTimeSortable

def PrintTimeSortableMillisec(t, local):
    return _cmsdk2.PrintTimeSortableMillisec(t, local)
PrintTimeSortableMillisec = _cmsdk2.PrintTimeSortableMillisec

def PrintTimeSortableMicrosec(t, local):
    return _cmsdk2.PrintTimeSortableMicrosec(t, local)
PrintTimeSortableMicrosec = _cmsdk2.PrintTimeSortableMicrosec

def PrintTimeNowString(local=True, us=True, ms=True):
    return _cmsdk2.PrintTimeNowString(local, us, ms)
PrintTimeNowString = _cmsdk2.PrintTimeNowString

def PrintTimeString(t, local=True, us=True, ms=True):
    return _cmsdk2.PrintTimeString(t, local, us, ms)
PrintTimeString = _cmsdk2.PrintTimeString

def PrintTimeOnlyString(t, local=True, us=True, ms=True):
    return _cmsdk2.PrintTimeOnlyString(t, local, us, ms)
PrintTimeOnlyString = _cmsdk2.PrintTimeOnlyString

def PrintTimeDifString(t, us=True, ms=True):
    return _cmsdk2.PrintTimeDifString(t, us, ms)
PrintTimeDifString = _cmsdk2.PrintTimeDifString

def PrintDateString(t, local=True):
    return _cmsdk2.PrintDateString(t, local)
PrintDateString = _cmsdk2.PrintDateString

def PrintDateStringSortable(t, local=True):
    return _cmsdk2.PrintDateStringSortable(t, local)
PrintDateStringSortable = _cmsdk2.PrintDateStringSortable

def PrintDateStringSortableDelimiter(t, arg2, local=True):
    return _cmsdk2.PrintDateStringSortableDelimiter(t, arg2, local)
PrintDateStringSortableDelimiter = _cmsdk2.PrintDateStringSortableDelimiter

def PrintTimeSortableString(t, local=True):
    return _cmsdk2.PrintTimeSortableString(t, local)
PrintTimeSortableString = _cmsdk2.PrintTimeSortableString

def PrintTimeSortableMillisecString(t, local=True):
    return _cmsdk2.PrintTimeSortableMillisecString(t, local)
PrintTimeSortableMillisecString = _cmsdk2.PrintTimeSortableMillisecString

def PrintTimeSortableMicrosecString(t, local=True):
    return _cmsdk2.PrintTimeSortableMicrosecString(t, local)
PrintTimeSortableMicrosecString = _cmsdk2.PrintTimeSortableMicrosecString

def FTime2PsyTime(t):
    return _cmsdk2.FTime2PsyTime(t)
FTime2PsyTime = _cmsdk2.FTime2PsyTime

def PsyTime_UnitTest():
    return _cmsdk2.PsyTime_UnitTest()
PsyTime_UnitTest = _cmsdk2.PsyTime_UnitTest
DATACTRL = _cmsdk2.DATACTRL
RLECTRL = _cmsdk2.RLECTRL
DIFCTRL = _cmsdk2.DIFCTRL
class BITMAPFILEHEADER_CM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BITMAPFILEHEADER_CM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BITMAPFILEHEADER_CM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bfType"] = _cmsdk2.BITMAPFILEHEADER_CM_bfType_set
    __swig_getmethods__["bfType"] = _cmsdk2.BITMAPFILEHEADER_CM_bfType_get
    if _newclass:
        bfType = _swig_property(_cmsdk2.BITMAPFILEHEADER_CM_bfType_get, _cmsdk2.BITMAPFILEHEADER_CM_bfType_set)
    __swig_setmethods__["bfSize"] = _cmsdk2.BITMAPFILEHEADER_CM_bfSize_set
    __swig_getmethods__["bfSize"] = _cmsdk2.BITMAPFILEHEADER_CM_bfSize_get
    if _newclass:
        bfSize = _swig_property(_cmsdk2.BITMAPFILEHEADER_CM_bfSize_get, _cmsdk2.BITMAPFILEHEADER_CM_bfSize_set)
    __swig_setmethods__["bfReserved1"] = _cmsdk2.BITMAPFILEHEADER_CM_bfReserved1_set
    __swig_getmethods__["bfReserved1"] = _cmsdk2.BITMAPFILEHEADER_CM_bfReserved1_get
    if _newclass:
        bfReserved1 = _swig_property(_cmsdk2.BITMAPFILEHEADER_CM_bfReserved1_get, _cmsdk2.BITMAPFILEHEADER_CM_bfReserved1_set)
    __swig_setmethods__["bfReserved2"] = _cmsdk2.BITMAPFILEHEADER_CM_bfReserved2_set
    __swig_getmethods__["bfReserved2"] = _cmsdk2.BITMAPFILEHEADER_CM_bfReserved2_get
    if _newclass:
        bfReserved2 = _swig_property(_cmsdk2.BITMAPFILEHEADER_CM_bfReserved2_get, _cmsdk2.BITMAPFILEHEADER_CM_bfReserved2_set)
    __swig_setmethods__["bfOffBits"] = _cmsdk2.BITMAPFILEHEADER_CM_bfOffBits_set
    __swig_getmethods__["bfOffBits"] = _cmsdk2.BITMAPFILEHEADER_CM_bfOffBits_get
    if _newclass:
        bfOffBits = _swig_property(_cmsdk2.BITMAPFILEHEADER_CM_bfOffBits_get, _cmsdk2.BITMAPFILEHEADER_CM_bfOffBits_set)

    def __init__(self):
        this = _cmsdk2.new_BITMAPFILEHEADER_CM()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_BITMAPFILEHEADER_CM
    __del__ = lambda self: None
BITMAPFILEHEADER_CM_swigregister = _cmsdk2.BITMAPFILEHEADER_CM_swigregister
BITMAPFILEHEADER_CM_swigregister(BITMAPFILEHEADER_CM)

class BITMAPINFOHEADER_CM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BITMAPINFOHEADER_CM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BITMAPINFOHEADER_CM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["biSize"] = _cmsdk2.BITMAPINFOHEADER_CM_biSize_set
    __swig_getmethods__["biSize"] = _cmsdk2.BITMAPINFOHEADER_CM_biSize_get
    if _newclass:
        biSize = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biSize_get, _cmsdk2.BITMAPINFOHEADER_CM_biSize_set)
    __swig_setmethods__["biWidth"] = _cmsdk2.BITMAPINFOHEADER_CM_biWidth_set
    __swig_getmethods__["biWidth"] = _cmsdk2.BITMAPINFOHEADER_CM_biWidth_get
    if _newclass:
        biWidth = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biWidth_get, _cmsdk2.BITMAPINFOHEADER_CM_biWidth_set)
    __swig_setmethods__["biHeight"] = _cmsdk2.BITMAPINFOHEADER_CM_biHeight_set
    __swig_getmethods__["biHeight"] = _cmsdk2.BITMAPINFOHEADER_CM_biHeight_get
    if _newclass:
        biHeight = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biHeight_get, _cmsdk2.BITMAPINFOHEADER_CM_biHeight_set)
    __swig_setmethods__["biPlanes"] = _cmsdk2.BITMAPINFOHEADER_CM_biPlanes_set
    __swig_getmethods__["biPlanes"] = _cmsdk2.BITMAPINFOHEADER_CM_biPlanes_get
    if _newclass:
        biPlanes = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biPlanes_get, _cmsdk2.BITMAPINFOHEADER_CM_biPlanes_set)
    __swig_setmethods__["biBitCount"] = _cmsdk2.BITMAPINFOHEADER_CM_biBitCount_set
    __swig_getmethods__["biBitCount"] = _cmsdk2.BITMAPINFOHEADER_CM_biBitCount_get
    if _newclass:
        biBitCount = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biBitCount_get, _cmsdk2.BITMAPINFOHEADER_CM_biBitCount_set)
    __swig_setmethods__["biCompression"] = _cmsdk2.BITMAPINFOHEADER_CM_biCompression_set
    __swig_getmethods__["biCompression"] = _cmsdk2.BITMAPINFOHEADER_CM_biCompression_get
    if _newclass:
        biCompression = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biCompression_get, _cmsdk2.BITMAPINFOHEADER_CM_biCompression_set)
    __swig_setmethods__["biSizeImage"] = _cmsdk2.BITMAPINFOHEADER_CM_biSizeImage_set
    __swig_getmethods__["biSizeImage"] = _cmsdk2.BITMAPINFOHEADER_CM_biSizeImage_get
    if _newclass:
        biSizeImage = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biSizeImage_get, _cmsdk2.BITMAPINFOHEADER_CM_biSizeImage_set)
    __swig_setmethods__["biXPelsPerMeter"] = _cmsdk2.BITMAPINFOHEADER_CM_biXPelsPerMeter_set
    __swig_getmethods__["biXPelsPerMeter"] = _cmsdk2.BITMAPINFOHEADER_CM_biXPelsPerMeter_get
    if _newclass:
        biXPelsPerMeter = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biXPelsPerMeter_get, _cmsdk2.BITMAPINFOHEADER_CM_biXPelsPerMeter_set)
    __swig_setmethods__["biYPelsPerMeter"] = _cmsdk2.BITMAPINFOHEADER_CM_biYPelsPerMeter_set
    __swig_getmethods__["biYPelsPerMeter"] = _cmsdk2.BITMAPINFOHEADER_CM_biYPelsPerMeter_get
    if _newclass:
        biYPelsPerMeter = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biYPelsPerMeter_get, _cmsdk2.BITMAPINFOHEADER_CM_biYPelsPerMeter_set)
    __swig_setmethods__["biClrUsed"] = _cmsdk2.BITMAPINFOHEADER_CM_biClrUsed_set
    __swig_getmethods__["biClrUsed"] = _cmsdk2.BITMAPINFOHEADER_CM_biClrUsed_get
    if _newclass:
        biClrUsed = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biClrUsed_get, _cmsdk2.BITMAPINFOHEADER_CM_biClrUsed_set)
    __swig_setmethods__["biClrImportant"] = _cmsdk2.BITMAPINFOHEADER_CM_biClrImportant_set
    __swig_getmethods__["biClrImportant"] = _cmsdk2.BITMAPINFOHEADER_CM_biClrImportant_get
    if _newclass:
        biClrImportant = _swig_property(_cmsdk2.BITMAPINFOHEADER_CM_biClrImportant_get, _cmsdk2.BITMAPINFOHEADER_CM_biClrImportant_set)

    def __init__(self):
        this = _cmsdk2.new_BITMAPINFOHEADER_CM()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_BITMAPINFOHEADER_CM
    __del__ = lambda self: None
BITMAPINFOHEADER_CM_swigregister = _cmsdk2.BITMAPINFOHEADER_CM_swigregister
BITMAPINFOHEADER_CM_swigregister(BITMAPINFOHEADER_CM)

class valRGBA(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, valRGBA, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, valRGBA, name)
    __repr__ = _swig_repr
    __swig_setmethods__["red"] = _cmsdk2.valRGBA_red_set
    __swig_getmethods__["red"] = _cmsdk2.valRGBA_red_get
    if _newclass:
        red = _swig_property(_cmsdk2.valRGBA_red_get, _cmsdk2.valRGBA_red_set)
    __swig_setmethods__["green"] = _cmsdk2.valRGBA_green_set
    __swig_getmethods__["green"] = _cmsdk2.valRGBA_green_get
    if _newclass:
        green = _swig_property(_cmsdk2.valRGBA_green_get, _cmsdk2.valRGBA_green_set)
    __swig_setmethods__["blue"] = _cmsdk2.valRGBA_blue_set
    __swig_getmethods__["blue"] = _cmsdk2.valRGBA_blue_get
    if _newclass:
        blue = _swig_property(_cmsdk2.valRGBA_blue_get, _cmsdk2.valRGBA_blue_set)
    __swig_setmethods__["alpha"] = _cmsdk2.valRGBA_alpha_set
    __swig_getmethods__["alpha"] = _cmsdk2.valRGBA_alpha_get
    if _newclass:
        alpha = _swig_property(_cmsdk2.valRGBA_alpha_get, _cmsdk2.valRGBA_alpha_set)

    def __init__(self):
        this = _cmsdk2.new_valRGBA()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_valRGBA
    __del__ = lambda self: None
valRGBA_swigregister = _cmsdk2.valRGBA_swigregister
valRGBA_swigregister(valRGBA)

class Pixel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Pixel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Pixel, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _cmsdk2.new_Pixel()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_setmethods__["x"] = _cmsdk2.Pixel_x_set
    __swig_getmethods__["x"] = _cmsdk2.Pixel_x_get
    if _newclass:
        x = _swig_property(_cmsdk2.Pixel_x_get, _cmsdk2.Pixel_x_set)
    __swig_setmethods__["y"] = _cmsdk2.Pixel_y_set
    __swig_getmethods__["y"] = _cmsdk2.Pixel_y_get
    if _newclass:
        y = _swig_property(_cmsdk2.Pixel_y_get, _cmsdk2.Pixel_y_set)
    __swig_setmethods__["value"] = _cmsdk2.Pixel_value_set
    __swig_getmethods__["value"] = _cmsdk2.Pixel_value_get
    if _newclass:
        value = _swig_property(_cmsdk2.Pixel_value_get, _cmsdk2.Pixel_value_set)
    __swig_destroy__ = _cmsdk2.delete_Pixel
    __del__ = lambda self: None
Pixel_swigregister = _cmsdk2.Pixel_swigregister
Pixel_swigregister(Pixel)

class Bitmap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Bitmap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Bitmap, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _cmsdk2.new_Bitmap(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_Bitmap
    __del__ = lambda self: None

    def init(self, *args):
        return _cmsdk2.Bitmap_init(self, *args)

    def toMessage(self):
        return _cmsdk2.Bitmap_toMessage(self)

    def __sub__(self, bitmap):
        return _cmsdk2.Bitmap___sub__(self, bitmap)

    def updateBitmap(self, update, takeData):
        return _cmsdk2.Bitmap_updateBitmap(self, update, takeData)

    def runLengthEncode(self):
        return _cmsdk2.Bitmap_runLengthEncode(self)

    def runLengthDestructiveEncode(self):
        return _cmsdk2.Bitmap_runLengthDestructiveEncode(self)

    def reset(self):
        return _cmsdk2.Bitmap_reset(self)

    def mirror(self, horizontal, vertical):
        return _cmsdk2.Bitmap_mirror(self, horizontal, vertical)

    def setPixel(self, *args):
        return _cmsdk2.Bitmap_setPixel(self, *args)

    def setPixelXOR(self, *args):
        return _cmsdk2.Bitmap_setPixelXOR(self, *args)

    def getPixel(self, *args):
        return _cmsdk2.Bitmap_getPixel(self, *args)

    def getPos(self, x, y):
        return _cmsdk2.Bitmap_getPos(self, x, y)

    def getDPos(self, x, y):
        return _cmsdk2.Bitmap_getDPos(self, x, y)

    def getXY(self, pos):
        return _cmsdk2.Bitmap_getXY(self, pos)

    def getPixelColor(self, x, y):
        return _cmsdk2.Bitmap_getPixelColor(self, x, y)

    def eraseBitmap(self, *args):
        return _cmsdk2.Bitmap_eraseBitmap(self, *args)

    def replaceColor(self, oldColor, newColor):
        return _cmsdk2.Bitmap_replaceColor(self, oldColor, newColor)

    def fillBox(self, *args):
        return _cmsdk2.Bitmap_fillBox(self, *args)

    def putTransPixel(self, x, y, color, weight):
        return _cmsdk2.Bitmap_putTransPixel(self, x, y, color, weight)

    def drawLine(self, *args):
        return _cmsdk2.Bitmap_drawLine(self, *args)

    def drawBox(self, box, color):
        return _cmsdk2.Bitmap_drawBox(self, box, color)

    def drawCircle(self, xCenter, yCenter, radius, color, weight, lineWidth, filled=False):
        return _cmsdk2.Bitmap_drawCircle(self, xCenter, yCenter, radius, color, weight, lineWidth, filled)

    def putQuadPixel(self, xCenter, yCenter, x, y, color, weight):
        return _cmsdk2.Bitmap_putQuadPixel(self, xCenter, yCenter, x, y, color, weight)

    def drawBitmap(self, *args):
        return _cmsdk2.Bitmap_drawBitmap(self, *args)

    def getCopy(self, box):
        return _cmsdk2.Bitmap_getCopy(self, box)

    def canBeResizedTo(self, width, height):
        return _cmsdk2.Bitmap_canBeResizedTo(self, width, height)

    def getResizedCopy(self, *args):
        return _cmsdk2.Bitmap_getResizedCopy(self, *args)

    def resizeTo(self, w, h, proportional):
        return _cmsdk2.Bitmap_resizeTo(self, w, h, proportional)

    def copyDataFromBitmap(self, bitmap, shouldResize=False):
        return _cmsdk2.Bitmap_copyDataFromBitmap(self, bitmap, shouldResize)

    def takeDataFromBitmap(self, bitmap):
        return _cmsdk2.Bitmap_takeDataFromBitmap(self, bitmap)

    def getBestResizeFactor(self, factor):
        return _cmsdk2.Bitmap_getBestResizeFactor(self, factor)

    def getBestResizeFactors(self, factor, scaleUp, scaleDown, scale66):
        return _cmsdk2.Bitmap_getBestResizeFactors(self, factor, scaleUp, scaleDown, scale66)

    def createResizedData(self, newWidth, newHeight, scaleUp, scaleDown, scale66):
        return _cmsdk2.Bitmap_createResizedData(self, newWidth, newHeight, scaleUp, scaleDown, scale66)

    def readFromMemory(self, data, size):
        return _cmsdk2.Bitmap_readFromMemory(self, data, size)

    def readFromFile(self, filename):
        return _cmsdk2.Bitmap_readFromFile(self, filename)

    def saveToFile(self, filename):
        return _cmsdk2.Bitmap_saveToFile(self, filename)
    if _newclass:
        convertBitmapFileData = staticmethod(_cmsdk2.Bitmap_convertBitmapFileData)
    else:
        convertBitmapFileData = _cmsdk2.Bitmap_convertBitmapFileData
    if _newclass:
        convertBitmapFileDataRunLength = staticmethod(_cmsdk2.Bitmap_convertBitmapFileDataRunLength)
    else:
        convertBitmapFileDataRunLength = _cmsdk2.Bitmap_convertBitmapFileDataRunLength
    if _newclass:
        differenceBitmapFileData = staticmethod(_cmsdk2.Bitmap_differenceBitmapFileData)
    else:
        differenceBitmapFileData = _cmsdk2.Bitmap_differenceBitmapFileData
    if _newclass:
        differenceBitmapFileDataRunLength = staticmethod(_cmsdk2.Bitmap_differenceBitmapFileDataRunLength)
    else:
        differenceBitmapFileDataRunLength = _cmsdk2.Bitmap_differenceBitmapFileDataRunLength

    def getCompressedUpdate(self, destructive):
        return _cmsdk2.Bitmap_getCompressedUpdate(self, destructive)

    def getGrayScaleDataCopy(self, len):
        return _cmsdk2.Bitmap_getGrayScaleDataCopy(self, len)

    def copyGrayScaleData(self, src, len):
        return _cmsdk2.Bitmap_copyGrayScaleData(self, src, len)

    def resetBitmapUpdates(self):
        return _cmsdk2.Bitmap_resetBitmapUpdates(self)

    def setBitmapUpdated(self):
        return _cmsdk2.Bitmap_setBitmapUpdated(self)

    def addBitmapUpdateRegion(self, updateBox):
        return _cmsdk2.Bitmap_addBitmapUpdateRegion(self, updateBox)

    def hasBitmapBeenUpdated(self):
        return _cmsdk2.Bitmap_hasBitmapBeenUpdated(self)

    def hasBitmapBeenTotallyChanged(self):
        return _cmsdk2.Bitmap_hasBitmapBeenTotallyChanged(self)
    __swig_setmethods__["width"] = _cmsdk2.Bitmap_width_set
    __swig_getmethods__["width"] = _cmsdk2.Bitmap_width_get
    if _newclass:
        width = _swig_property(_cmsdk2.Bitmap_width_get, _cmsdk2.Bitmap_width_set)
    __swig_setmethods__["height"] = _cmsdk2.Bitmap_height_set
    __swig_getmethods__["height"] = _cmsdk2.Bitmap_height_get
    if _newclass:
        height = _swig_property(_cmsdk2.Bitmap_height_get, _cmsdk2.Bitmap_height_set)
    __swig_setmethods__["size"] = _cmsdk2.Bitmap_size_set
    __swig_getmethods__["size"] = _cmsdk2.Bitmap_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.Bitmap_size_get, _cmsdk2.Bitmap_size_set)
    __swig_setmethods__["data"] = _cmsdk2.Bitmap_data_set
    __swig_getmethods__["data"] = _cmsdk2.Bitmap_data_get
    if _newclass:
        data = _swig_property(_cmsdk2.Bitmap_data_get, _cmsdk2.Bitmap_data_set)
    __swig_setmethods__["updateRegion"] = _cmsdk2.Bitmap_updateRegion_set
    __swig_getmethods__["updateRegion"] = _cmsdk2.Bitmap_updateRegion_get
    if _newclass:
        updateRegion = _swig_property(_cmsdk2.Bitmap_updateRegion_get, _cmsdk2.Bitmap_updateRegion_set)

    def round(self, d):
        return _cmsdk2.Bitmap_round(self, d)

    def toBitmapFileFormat(self, len):
        return _cmsdk2.Bitmap_toBitmapFileFormat(self, len)
    if _newclass:
        DataToBitmapFileFormat = staticmethod(_cmsdk2.Bitmap_DataToBitmapFileFormat)
    else:
        DataToBitmapFileFormat = _cmsdk2.Bitmap_DataToBitmapFileFormat
    if _newclass:
        DataToEncodingFormat = staticmethod(_cmsdk2.Bitmap_DataToEncodingFormat)
    else:
        DataToEncodingFormat = _cmsdk2.Bitmap_DataToEncodingFormat
Bitmap_swigregister = _cmsdk2.Bitmap_swigregister
Bitmap_swigregister(Bitmap)

def Bitmap_convertBitmapFileData(src, width, height, depth, dst, dstlen):
    return _cmsdk2.Bitmap_convertBitmapFileData(src, width, height, depth, dst, dstlen)
Bitmap_convertBitmapFileData = _cmsdk2.Bitmap_convertBitmapFileData

def Bitmap_convertBitmapFileDataRunLength(src, width, height, depth, dstlen):
    return _cmsdk2.Bitmap_convertBitmapFileDataRunLength(src, width, height, depth, dstlen)
Bitmap_convertBitmapFileDataRunLength = _cmsdk2.Bitmap_convertBitmapFileDataRunLength

def Bitmap_differenceBitmapFileData(orig, src, width, height, depth, dstlen):
    return _cmsdk2.Bitmap_differenceBitmapFileData(orig, src, width, height, depth, dstlen)
Bitmap_differenceBitmapFileData = _cmsdk2.Bitmap_differenceBitmapFileData

def Bitmap_differenceBitmapFileDataRunLength(orig, src, width, height, depth, dstlen):
    return _cmsdk2.Bitmap_differenceBitmapFileDataRunLength(orig, src, width, height, depth, dstlen)
Bitmap_differenceBitmapFileDataRunLength = _cmsdk2.Bitmap_differenceBitmapFileDataRunLength

def Bitmap_DataToBitmapFileFormat(*args):
    return _cmsdk2.Bitmap_DataToBitmapFileFormat(*args)
Bitmap_DataToBitmapFileFormat = _cmsdk2.Bitmap_DataToBitmapFileFormat

def Bitmap_DataToEncodingFormat(data, size, width, height, srcEncoding, linestep, targetEncoding, len):
    return _cmsdk2.Bitmap_DataToEncodingFormat(data, size, width, height, srcEncoding, linestep, targetEncoding, len)
Bitmap_DataToEncodingFormat = _cmsdk2.Bitmap_DataToEncodingFormat


def ImageResizeDown66(bytesource, cols, rows):
    return _cmsdk2.ImageResizeDown66(bytesource, cols, rows)
ImageResizeDown66 = _cmsdk2.ImageResizeDown66

def ImageResizeDown(bytesource, cols, rows, factor):
    return _cmsdk2.ImageResizeDown(bytesource, cols, rows, factor)
ImageResizeDown = _cmsdk2.ImageResizeDown

def ImageResizeUp66(bytesource, cols, rows):
    return _cmsdk2.ImageResizeUp66(bytesource, cols, rows)
ImageResizeUp66 = _cmsdk2.ImageResizeUp66

def ImageResizeUp(bytesource, cols, rows, factor):
    return _cmsdk2.ImageResizeUp(bytesource, cols, rows, factor)
ImageResizeUp = _cmsdk2.ImageResizeUp
class BitmapUpdate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BitmapUpdate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BitmapUpdate, name)
    __repr__ = _swig_repr
    FULL = _cmsdk2.BitmapUpdate_FULL
    RUNLENGTH = _cmsdk2.BitmapUpdate_RUNLENGTH
    RL16 = _cmsdk2.BitmapUpdate_RL16
    DIF = _cmsdk2.BitmapUpdate_DIF
    DIFRUNLENGTH = _cmsdk2.BitmapUpdate_DIFRUNLENGTH
    NONE = _cmsdk2.BitmapUpdate_NONE
    __swig_setmethods__["type"] = _cmsdk2.BitmapUpdate_type_set
    __swig_getmethods__["type"] = _cmsdk2.BitmapUpdate_type_get
    if _newclass:
        type = _swig_property(_cmsdk2.BitmapUpdate_type_get, _cmsdk2.BitmapUpdate_type_set)

    def __init__(self, *args):
        this = _cmsdk2.new_BitmapUpdate(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_BitmapUpdate
    __del__ = lambda self: None

    def init(self, w, h):
        return _cmsdk2.BitmapUpdate_init(self, w, h)

    def reset(self):
        return _cmsdk2.BitmapUpdate_reset(self)

    def update(self, update):
        return _cmsdk2.BitmapUpdate_update(self, update)

    def toBitmap(self):
        return _cmsdk2.BitmapUpdate_toBitmap(self)

    def setUpdateType(self, updateType):
        return _cmsdk2.BitmapUpdate_setUpdateType(self, updateType)

    def getUpdateType(self):
        return _cmsdk2.BitmapUpdate_getUpdateType(self)

    def setFullUpdate(self, bitmap):
        return _cmsdk2.BitmapUpdate_setFullUpdate(self, bitmap)

    def readFromFile(self, filename):
        return _cmsdk2.BitmapUpdate_readFromFile(self, filename)

    def readFromFileRLE(self, filename):
        return _cmsdk2.BitmapUpdate_readFromFileRLE(self, filename)

    def readFromFileDiff(self, filename, oldBitmap):
        return _cmsdk2.BitmapUpdate_readFromFileDiff(self, filename, oldBitmap)

    def readFromFileRLEDiff(self, filename, oldBitmap):
        return _cmsdk2.BitmapUpdate_readFromFileRLEDiff(self, filename, oldBitmap)
    __swig_setmethods__["width"] = _cmsdk2.BitmapUpdate_width_set
    __swig_getmethods__["width"] = _cmsdk2.BitmapUpdate_width_get
    if _newclass:
        width = _swig_property(_cmsdk2.BitmapUpdate_width_get, _cmsdk2.BitmapUpdate_width_set)
    __swig_setmethods__["height"] = _cmsdk2.BitmapUpdate_height_set
    __swig_getmethods__["height"] = _cmsdk2.BitmapUpdate_height_get
    if _newclass:
        height = _swig_property(_cmsdk2.BitmapUpdate_height_get, _cmsdk2.BitmapUpdate_height_set)
    __swig_setmethods__["size"] = _cmsdk2.BitmapUpdate_size_set
    __swig_getmethods__["size"] = _cmsdk2.BitmapUpdate_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.BitmapUpdate_size_get, _cmsdk2.BitmapUpdate_size_set)
    __swig_setmethods__["data"] = _cmsdk2.BitmapUpdate_data_set
    __swig_getmethods__["data"] = _cmsdk2.BitmapUpdate_data_get
    if _newclass:
        data = _swig_property(_cmsdk2.BitmapUpdate_data_get, _cmsdk2.BitmapUpdate_data_set)
BitmapUpdate_swigregister = _cmsdk2.BitmapUpdate_swigregister
BitmapUpdate_swigregister(BitmapUpdate)

class ReplayIndexEntry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ReplayIndexEntry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ReplayIndexEntry, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cid"] = _cmsdk2.ReplayIndexEntry_cid_set
    __swig_getmethods__["cid"] = _cmsdk2.ReplayIndexEntry_cid_get
    if _newclass:
        cid = _swig_property(_cmsdk2.ReplayIndexEntry_cid_get, _cmsdk2.ReplayIndexEntry_cid_set)
    __swig_setmethods__["serial"] = _cmsdk2.ReplayIndexEntry_serial_set
    __swig_getmethods__["serial"] = _cmsdk2.ReplayIndexEntry_serial_get
    if _newclass:
        serial = _swig_property(_cmsdk2.ReplayIndexEntry_serial_get, _cmsdk2.ReplayIndexEntry_serial_set)
    __swig_setmethods__["msgTime"] = _cmsdk2.ReplayIndexEntry_msgTime_set
    __swig_getmethods__["msgTime"] = _cmsdk2.ReplayIndexEntry_msgTime_get
    if _newclass:
        msgTime = _swig_property(_cmsdk2.ReplayIndexEntry_msgTime_get, _cmsdk2.ReplayIndexEntry_msgTime_set)
    __swig_setmethods__["size"] = _cmsdk2.ReplayIndexEntry_size_set
    __swig_getmethods__["size"] = _cmsdk2.ReplayIndexEntry_size_get
    if _newclass:
        size = _swig_property(_cmsdk2.ReplayIndexEntry_size_get, _cmsdk2.ReplayIndexEntry_size_set)
    __swig_setmethods__["msgTriggerName"] = _cmsdk2.ReplayIndexEntry_msgTriggerName_set
    __swig_getmethods__["msgTriggerName"] = _cmsdk2.ReplayIndexEntry_msgTriggerName_get
    if _newclass:
        msgTriggerName = _swig_property(_cmsdk2.ReplayIndexEntry_msgTriggerName_get, _cmsdk2.ReplayIndexEntry_msgTriggerName_set)
    __swig_setmethods__["msg"] = _cmsdk2.ReplayIndexEntry_msg_set
    __swig_getmethods__["msg"] = _cmsdk2.ReplayIndexEntry_msg_get
    if _newclass:
        msg = _swig_property(_cmsdk2.ReplayIndexEntry_msg_get, _cmsdk2.ReplayIndexEntry_msg_set)

    def reset(self):
        return _cmsdk2.ReplayIndexEntry_reset(self)

    def isValid(self):
        return _cmsdk2.ReplayIndexEntry_isValid(self)

    def __init__(self):
        this = _cmsdk2.new_ReplayIndexEntry()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_ReplayIndexEntry
    __del__ = lambda self: None
ReplayIndexEntry_swigregister = _cmsdk2.ReplayIndexEntry_swigregister
ReplayIndexEntry_swigregister(ReplayIndexEntry)

class MessagePlayer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MessagePlayer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MessagePlayer, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _cmsdk2.new_MessagePlayer()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cmsdk2.delete_MessagePlayer
    __del__ = lambda self: None

    def initRead(self, *args):
        return _cmsdk2.MessagePlayer_initRead(self, *args)

    def initWrite(self, root, maxCount, maxSize):
        return _cmsdk2.MessagePlayer_initWrite(self, root, maxCount, maxSize)

    def setSubTypeList(self, subtypes):
        return _cmsdk2.MessagePlayer_setSubTypeList(self, subtypes)

    def setSubContextList(self, subcontexts):
        return _cmsdk2.MessagePlayer_setSubContextList(self, subcontexts)

    def setComponentNameList(self, names):
        return _cmsdk2.MessagePlayer_setComponentNameList(self, names)

    def writeMetadata(self):
        return _cmsdk2.MessagePlayer_writeMetadata(self)

    def readMetadata(self):
        return _cmsdk2.MessagePlayer_readMetadata(self)

    def setSystemIDs(self, msg):
        return _cmsdk2.MessagePlayer_setSystemIDs(self, msg)

    def exportToCSVFile(self, filename, separator=None):
        return _cmsdk2.MessagePlayer_exportToCSVFile(self, filename, separator)

    def exportToCSV(self, separator=None):
        return _cmsdk2.MessagePlayer_exportToCSV(self, separator)

    def addMessage(self, name, msg):
        return _cmsdk2.MessagePlayer_addMessage(self, name, msg)

    def waitForNextMessage(self, *args):
        return _cmsdk2.MessagePlayer_waitForNextMessage(self, *args)

    def getCurrentTriggerName(self):
        return _cmsdk2.MessagePlayer_getCurrentTriggerName(self)

    def flushToDisk(self):
        return _cmsdk2.MessagePlayer_flushToDisk(self)

    def printAllString(self, format=None):
        return _cmsdk2.MessagePlayer_printAllString(self, format)
MessagePlayer_swigregister = _cmsdk2.MessagePlayer_swigregister
MessagePlayer_swigregister(MessagePlayer)

# This file is compatible with both classic and new-style classes.


